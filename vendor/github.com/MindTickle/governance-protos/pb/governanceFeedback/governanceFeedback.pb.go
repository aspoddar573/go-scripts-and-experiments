// Code generated by protoc-gen-go. DO NOT EDIT.
// source: governanceFeedback.proto

/*
Package governanceFeedback is a generated protocol buffer package.

It is generated from these files:
	governanceFeedback.proto

It has these top-level messages:
	BulkModuleOpsFeedbackDetails
	ModuleOpsFeedback
	ModuleCopyFromArchiveFeedback
	ModuleCopyFeedback
	ModuleMirrorFeedback
	ModuleMoveFeedback
	ModulePublishFeedback
	DeepCopySeriesFeedback
	ModuleArchiveFeedback
	ModuleDeleteFeedback
*/
package governanceFeedback

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import com_mindtickle_api_governance_feedback "github.com/MindTickle/governance-protos/pb/feedback"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BulkModuleOpsFeedbackDetails struct {
	ModuleOpsFeedback []*ModuleOpsFeedback `protobuf:"bytes,1,rep,name=module_ops_feedback,json=moduleOpsFeedback" json:"module_ops_feedback,omitempty"`
}

func (m *BulkModuleOpsFeedbackDetails) Reset()                    { *m = BulkModuleOpsFeedbackDetails{} }
func (m *BulkModuleOpsFeedbackDetails) String() string            { return proto.CompactTextString(m) }
func (*BulkModuleOpsFeedbackDetails) ProtoMessage()               {}
func (*BulkModuleOpsFeedbackDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BulkModuleOpsFeedbackDetails) GetModuleOpsFeedback() []*ModuleOpsFeedback {
	if m != nil {
		return m.ModuleOpsFeedback
	}
	return nil
}

type ModuleOpsFeedback struct {
	// Types that are valid to be assigned to ModuleOpsFeedback:
	//	*ModuleOpsFeedback_ModuleCopyFeedback
	//	*ModuleOpsFeedback_ModuleMirrorFeedback
	//	*ModuleOpsFeedback_ModulePublishFeedback
	//	*ModuleOpsFeedback_ModuleCopyFromArchiveFeedback
	//	*ModuleOpsFeedback_ModuleMoveFeedback
	//	*ModuleOpsFeedback_DeepCopySeriesFeedback
	//	*ModuleOpsFeedback_ModuleArchiveFeedback
	//	*ModuleOpsFeedback_ModuleDeleteFeedback
	ModuleOpsFeedback isModuleOpsFeedback_ModuleOpsFeedback `protobuf_oneof:"module_ops_feedback"`
}

func (m *ModuleOpsFeedback) Reset()                    { *m = ModuleOpsFeedback{} }
func (m *ModuleOpsFeedback) String() string            { return proto.CompactTextString(m) }
func (*ModuleOpsFeedback) ProtoMessage()               {}
func (*ModuleOpsFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isModuleOpsFeedback_ModuleOpsFeedback interface {
	isModuleOpsFeedback_ModuleOpsFeedback()
}

type ModuleOpsFeedback_ModuleCopyFeedback struct {
	ModuleCopyFeedback *ModuleCopyFeedback `protobuf:"bytes,1,opt,name=module_copy_feedback,json=moduleCopyFeedback,oneof"`
}
type ModuleOpsFeedback_ModuleMirrorFeedback struct {
	ModuleMirrorFeedback *ModuleMirrorFeedback `protobuf:"bytes,2,opt,name=module_mirror_feedback,json=moduleMirrorFeedback,oneof"`
}
type ModuleOpsFeedback_ModulePublishFeedback struct {
	ModulePublishFeedback *ModulePublishFeedback `protobuf:"bytes,3,opt,name=module_publish_feedback,json=modulePublishFeedback,oneof"`
}
type ModuleOpsFeedback_ModuleCopyFromArchiveFeedback struct {
	ModuleCopyFromArchiveFeedback *ModuleCopyFromArchiveFeedback `protobuf:"bytes,4,opt,name=module_copy_from_archive_feedback,json=moduleCopyFromArchiveFeedback,oneof"`
}
type ModuleOpsFeedback_ModuleMoveFeedback struct {
	ModuleMoveFeedback *ModuleMoveFeedback `protobuf:"bytes,5,opt,name=module_move_feedback,json=moduleMoveFeedback,oneof"`
}
type ModuleOpsFeedback_DeepCopySeriesFeedback struct {
	DeepCopySeriesFeedback *DeepCopySeriesFeedback `protobuf:"bytes,6,opt,name=deep_copy_series_feedback,json=deepCopySeriesFeedback,oneof"`
}
type ModuleOpsFeedback_ModuleArchiveFeedback struct {
	ModuleArchiveFeedback *ModuleArchiveFeedback `protobuf:"bytes,7,opt,name=module_archive_feedback,json=moduleArchiveFeedback,oneof"`
}
type ModuleOpsFeedback_ModuleDeleteFeedback struct {
	ModuleDeleteFeedback *ModuleDeleteFeedback `protobuf:"bytes,8,opt,name=module_delete_feedback,json=moduleDeleteFeedback,oneof"`
}

func (*ModuleOpsFeedback_ModuleCopyFeedback) isModuleOpsFeedback_ModuleOpsFeedback()            {}
func (*ModuleOpsFeedback_ModuleMirrorFeedback) isModuleOpsFeedback_ModuleOpsFeedback()          {}
func (*ModuleOpsFeedback_ModulePublishFeedback) isModuleOpsFeedback_ModuleOpsFeedback()         {}
func (*ModuleOpsFeedback_ModuleCopyFromArchiveFeedback) isModuleOpsFeedback_ModuleOpsFeedback() {}
func (*ModuleOpsFeedback_ModuleMoveFeedback) isModuleOpsFeedback_ModuleOpsFeedback()            {}
func (*ModuleOpsFeedback_DeepCopySeriesFeedback) isModuleOpsFeedback_ModuleOpsFeedback()        {}
func (*ModuleOpsFeedback_ModuleArchiveFeedback) isModuleOpsFeedback_ModuleOpsFeedback()         {}
func (*ModuleOpsFeedback_ModuleDeleteFeedback) isModuleOpsFeedback_ModuleOpsFeedback()          {}

func (m *ModuleOpsFeedback) GetModuleOpsFeedback() isModuleOpsFeedback_ModuleOpsFeedback {
	if m != nil {
		return m.ModuleOpsFeedback
	}
	return nil
}

func (m *ModuleOpsFeedback) GetModuleCopyFeedback() *ModuleCopyFeedback {
	if x, ok := m.GetModuleOpsFeedback().(*ModuleOpsFeedback_ModuleCopyFeedback); ok {
		return x.ModuleCopyFeedback
	}
	return nil
}

func (m *ModuleOpsFeedback) GetModuleMirrorFeedback() *ModuleMirrorFeedback {
	if x, ok := m.GetModuleOpsFeedback().(*ModuleOpsFeedback_ModuleMirrorFeedback); ok {
		return x.ModuleMirrorFeedback
	}
	return nil
}

func (m *ModuleOpsFeedback) GetModulePublishFeedback() *ModulePublishFeedback {
	if x, ok := m.GetModuleOpsFeedback().(*ModuleOpsFeedback_ModulePublishFeedback); ok {
		return x.ModulePublishFeedback
	}
	return nil
}

func (m *ModuleOpsFeedback) GetModuleCopyFromArchiveFeedback() *ModuleCopyFromArchiveFeedback {
	if x, ok := m.GetModuleOpsFeedback().(*ModuleOpsFeedback_ModuleCopyFromArchiveFeedback); ok {
		return x.ModuleCopyFromArchiveFeedback
	}
	return nil
}

func (m *ModuleOpsFeedback) GetModuleMoveFeedback() *ModuleMoveFeedback {
	if x, ok := m.GetModuleOpsFeedback().(*ModuleOpsFeedback_ModuleMoveFeedback); ok {
		return x.ModuleMoveFeedback
	}
	return nil
}

func (m *ModuleOpsFeedback) GetDeepCopySeriesFeedback() *DeepCopySeriesFeedback {
	if x, ok := m.GetModuleOpsFeedback().(*ModuleOpsFeedback_DeepCopySeriesFeedback); ok {
		return x.DeepCopySeriesFeedback
	}
	return nil
}

func (m *ModuleOpsFeedback) GetModuleArchiveFeedback() *ModuleArchiveFeedback {
	if x, ok := m.GetModuleOpsFeedback().(*ModuleOpsFeedback_ModuleArchiveFeedback); ok {
		return x.ModuleArchiveFeedback
	}
	return nil
}

func (m *ModuleOpsFeedback) GetModuleDeleteFeedback() *ModuleDeleteFeedback {
	if x, ok := m.GetModuleOpsFeedback().(*ModuleOpsFeedback_ModuleDeleteFeedback); ok {
		return x.ModuleDeleteFeedback
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ModuleOpsFeedback) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ModuleOpsFeedback_OneofMarshaler, _ModuleOpsFeedback_OneofUnmarshaler, _ModuleOpsFeedback_OneofSizer, []interface{}{
		(*ModuleOpsFeedback_ModuleCopyFeedback)(nil),
		(*ModuleOpsFeedback_ModuleMirrorFeedback)(nil),
		(*ModuleOpsFeedback_ModulePublishFeedback)(nil),
		(*ModuleOpsFeedback_ModuleCopyFromArchiveFeedback)(nil),
		(*ModuleOpsFeedback_ModuleMoveFeedback)(nil),
		(*ModuleOpsFeedback_DeepCopySeriesFeedback)(nil),
		(*ModuleOpsFeedback_ModuleArchiveFeedback)(nil),
		(*ModuleOpsFeedback_ModuleDeleteFeedback)(nil),
	}
}

func _ModuleOpsFeedback_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ModuleOpsFeedback)
	// module_ops_feedback
	switch x := m.ModuleOpsFeedback.(type) {
	case *ModuleOpsFeedback_ModuleCopyFeedback:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModuleCopyFeedback); err != nil {
			return err
		}
	case *ModuleOpsFeedback_ModuleMirrorFeedback:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModuleMirrorFeedback); err != nil {
			return err
		}
	case *ModuleOpsFeedback_ModulePublishFeedback:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModulePublishFeedback); err != nil {
			return err
		}
	case *ModuleOpsFeedback_ModuleCopyFromArchiveFeedback:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModuleCopyFromArchiveFeedback); err != nil {
			return err
		}
	case *ModuleOpsFeedback_ModuleMoveFeedback:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModuleMoveFeedback); err != nil {
			return err
		}
	case *ModuleOpsFeedback_DeepCopySeriesFeedback:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DeepCopySeriesFeedback); err != nil {
			return err
		}
	case *ModuleOpsFeedback_ModuleArchiveFeedback:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModuleArchiveFeedback); err != nil {
			return err
		}
	case *ModuleOpsFeedback_ModuleDeleteFeedback:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ModuleDeleteFeedback); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ModuleOpsFeedback.ModuleOpsFeedback has unexpected type %T", x)
	}
	return nil
}

func _ModuleOpsFeedback_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ModuleOpsFeedback)
	switch tag {
	case 1: // module_ops_feedback.module_copy_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModuleCopyFeedback)
		err := b.DecodeMessage(msg)
		m.ModuleOpsFeedback = &ModuleOpsFeedback_ModuleCopyFeedback{msg}
		return true, err
	case 2: // module_ops_feedback.module_mirror_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModuleMirrorFeedback)
		err := b.DecodeMessage(msg)
		m.ModuleOpsFeedback = &ModuleOpsFeedback_ModuleMirrorFeedback{msg}
		return true, err
	case 3: // module_ops_feedback.module_publish_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModulePublishFeedback)
		err := b.DecodeMessage(msg)
		m.ModuleOpsFeedback = &ModuleOpsFeedback_ModulePublishFeedback{msg}
		return true, err
	case 4: // module_ops_feedback.module_copy_from_archive_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModuleCopyFromArchiveFeedback)
		err := b.DecodeMessage(msg)
		m.ModuleOpsFeedback = &ModuleOpsFeedback_ModuleCopyFromArchiveFeedback{msg}
		return true, err
	case 5: // module_ops_feedback.module_move_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModuleMoveFeedback)
		err := b.DecodeMessage(msg)
		m.ModuleOpsFeedback = &ModuleOpsFeedback_ModuleMoveFeedback{msg}
		return true, err
	case 6: // module_ops_feedback.deep_copy_series_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeepCopySeriesFeedback)
		err := b.DecodeMessage(msg)
		m.ModuleOpsFeedback = &ModuleOpsFeedback_DeepCopySeriesFeedback{msg}
		return true, err
	case 7: // module_ops_feedback.module_archive_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModuleArchiveFeedback)
		err := b.DecodeMessage(msg)
		m.ModuleOpsFeedback = &ModuleOpsFeedback_ModuleArchiveFeedback{msg}
		return true, err
	case 8: // module_ops_feedback.module_delete_feedback
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModuleDeleteFeedback)
		err := b.DecodeMessage(msg)
		m.ModuleOpsFeedback = &ModuleOpsFeedback_ModuleDeleteFeedback{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ModuleOpsFeedback_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ModuleOpsFeedback)
	// module_ops_feedback
	switch x := m.ModuleOpsFeedback.(type) {
	case *ModuleOpsFeedback_ModuleCopyFeedback:
		s := proto.Size(x.ModuleCopyFeedback)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ModuleOpsFeedback_ModuleMirrorFeedback:
		s := proto.Size(x.ModuleMirrorFeedback)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ModuleOpsFeedback_ModulePublishFeedback:
		s := proto.Size(x.ModulePublishFeedback)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ModuleOpsFeedback_ModuleCopyFromArchiveFeedback:
		s := proto.Size(x.ModuleCopyFromArchiveFeedback)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ModuleOpsFeedback_ModuleMoveFeedback:
		s := proto.Size(x.ModuleMoveFeedback)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ModuleOpsFeedback_DeepCopySeriesFeedback:
		s := proto.Size(x.DeepCopySeriesFeedback)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ModuleOpsFeedback_ModuleArchiveFeedback:
		s := proto.Size(x.ModuleArchiveFeedback)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ModuleOpsFeedback_ModuleDeleteFeedback:
		s := proto.Size(x.ModuleDeleteFeedback)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ModuleCopyFromArchiveFeedback struct {
	ModuleId            string                                        `protobuf:"bytes,1,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	DestinationSeriesId string                                        `protobuf:"bytes,2,opt,name=destination_series_id,json=destinationSeriesId" json:"destination_series_id,omitempty"`
	Status              com_mindtickle_api_governance_feedback.Status `protobuf:"varint,3,opt,name=status,enum=com.mindtickle.api.governance.feedback.Status" json:"status,omitempty"`
	FailureReason       string                                        `protobuf:"bytes,4,opt,name=failureReason" json:"failureReason,omitempty"`
	NewSeries           bool                                          `protobuf:"varint,5,opt,name=new_series,json=newSeries" json:"new_series,omitempty"`
	SeriesName          string                                        `protobuf:"bytes,6,opt,name=series_name,json=seriesName" json:"series_name,omitempty"`
}

func (m *ModuleCopyFromArchiveFeedback) Reset()                    { *m = ModuleCopyFromArchiveFeedback{} }
func (m *ModuleCopyFromArchiveFeedback) String() string            { return proto.CompactTextString(m) }
func (*ModuleCopyFromArchiveFeedback) ProtoMessage()               {}
func (*ModuleCopyFromArchiveFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ModuleCopyFromArchiveFeedback) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *ModuleCopyFromArchiveFeedback) GetDestinationSeriesId() string {
	if m != nil {
		return m.DestinationSeriesId
	}
	return ""
}

func (m *ModuleCopyFromArchiveFeedback) GetStatus() com_mindtickle_api_governance_feedback.Status {
	if m != nil {
		return m.Status
	}
	return com_mindtickle_api_governance_feedback.Status_NOT_STARTED
}

func (m *ModuleCopyFromArchiveFeedback) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *ModuleCopyFromArchiveFeedback) GetNewSeries() bool {
	if m != nil {
		return m.NewSeries
	}
	return false
}

func (m *ModuleCopyFromArchiveFeedback) GetSeriesName() string {
	if m != nil {
		return m.SeriesName
	}
	return ""
}

type ModuleCopyFeedback struct {
	ModuleId            string                                        `protobuf:"bytes,1,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	SourceSeriesId      string                                        `protobuf:"bytes,2,opt,name=source_series_id,json=sourceSeriesId" json:"source_series_id,omitempty"`
	DestinationSeriesId string                                        `protobuf:"bytes,3,opt,name=destination_series_id,json=destinationSeriesId" json:"destination_series_id,omitempty"`
	Status              com_mindtickle_api_governance_feedback.Status `protobuf:"varint,4,opt,name=status,enum=com.mindtickle.api.governance.feedback.Status" json:"status,omitempty"`
	FailureReason       string                                        `protobuf:"bytes,5,opt,name=failureReason" json:"failureReason,omitempty"`
	NewSeries           bool                                          `protobuf:"varint,6,opt,name=new_series,json=newSeries" json:"new_series,omitempty"`
	SeriesName          string                                        `protobuf:"bytes,7,opt,name=series_name,json=seriesName" json:"series_name,omitempty"`
}

func (m *ModuleCopyFeedback) Reset()                    { *m = ModuleCopyFeedback{} }
func (m *ModuleCopyFeedback) String() string            { return proto.CompactTextString(m) }
func (*ModuleCopyFeedback) ProtoMessage()               {}
func (*ModuleCopyFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ModuleCopyFeedback) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *ModuleCopyFeedback) GetSourceSeriesId() string {
	if m != nil {
		return m.SourceSeriesId
	}
	return ""
}

func (m *ModuleCopyFeedback) GetDestinationSeriesId() string {
	if m != nil {
		return m.DestinationSeriesId
	}
	return ""
}

func (m *ModuleCopyFeedback) GetStatus() com_mindtickle_api_governance_feedback.Status {
	if m != nil {
		return m.Status
	}
	return com_mindtickle_api_governance_feedback.Status_NOT_STARTED
}

func (m *ModuleCopyFeedback) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *ModuleCopyFeedback) GetNewSeries() bool {
	if m != nil {
		return m.NewSeries
	}
	return false
}

func (m *ModuleCopyFeedback) GetSeriesName() string {
	if m != nil {
		return m.SeriesName
	}
	return ""
}

type ModuleMirrorFeedback struct {
	ModuleId            string                                        `protobuf:"bytes,1,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	SourceSeriesId      string                                        `protobuf:"bytes,2,opt,name=source_series_id,json=sourceSeriesId" json:"source_series_id,omitempty"`
	DestinationSeriesId string                                        `protobuf:"bytes,3,opt,name=destination_series_id,json=destinationSeriesId" json:"destination_series_id,omitempty"`
	Status              com_mindtickle_api_governance_feedback.Status `protobuf:"varint,4,opt,name=status,enum=com.mindtickle.api.governance.feedback.Status" json:"status,omitempty"`
	FailureReason       string                                        `protobuf:"bytes,5,opt,name=failureReason" json:"failureReason,omitempty"`
	NewSeries           bool                                          `protobuf:"varint,6,opt,name=new_series,json=newSeries" json:"new_series,omitempty"`
	SeriesName          string                                        `protobuf:"bytes,7,opt,name=series_name,json=seriesName" json:"series_name,omitempty"`
}

func (m *ModuleMirrorFeedback) Reset()                    { *m = ModuleMirrorFeedback{} }
func (m *ModuleMirrorFeedback) String() string            { return proto.CompactTextString(m) }
func (*ModuleMirrorFeedback) ProtoMessage()               {}
func (*ModuleMirrorFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ModuleMirrorFeedback) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *ModuleMirrorFeedback) GetSourceSeriesId() string {
	if m != nil {
		return m.SourceSeriesId
	}
	return ""
}

func (m *ModuleMirrorFeedback) GetDestinationSeriesId() string {
	if m != nil {
		return m.DestinationSeriesId
	}
	return ""
}

func (m *ModuleMirrorFeedback) GetStatus() com_mindtickle_api_governance_feedback.Status {
	if m != nil {
		return m.Status
	}
	return com_mindtickle_api_governance_feedback.Status_NOT_STARTED
}

func (m *ModuleMirrorFeedback) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *ModuleMirrorFeedback) GetNewSeries() bool {
	if m != nil {
		return m.NewSeries
	}
	return false
}

func (m *ModuleMirrorFeedback) GetSeriesName() string {
	if m != nil {
		return m.SeriesName
	}
	return ""
}

type ModuleMoveFeedback struct {
	ModuleId            string                                        `protobuf:"bytes,1,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	SourceSeriesId      string                                        `protobuf:"bytes,2,opt,name=source_series_id,json=sourceSeriesId" json:"source_series_id,omitempty"`
	DestinationSeriesId string                                        `protobuf:"bytes,3,opt,name=destination_series_id,json=destinationSeriesId" json:"destination_series_id,omitempty"`
	Status              com_mindtickle_api_governance_feedback.Status `protobuf:"varint,4,opt,name=status,enum=com.mindtickle.api.governance.feedback.Status" json:"status,omitempty"`
	FailureReason       string                                        `protobuf:"bytes,5,opt,name=failureReason" json:"failureReason,omitempty"`
	NewSeries           bool                                          `protobuf:"varint,6,opt,name=new_series,json=newSeries" json:"new_series,omitempty"`
	SeriesName          string                                        `protobuf:"bytes,7,opt,name=series_name,json=seriesName" json:"series_name,omitempty"`
}

func (m *ModuleMoveFeedback) Reset()                    { *m = ModuleMoveFeedback{} }
func (m *ModuleMoveFeedback) String() string            { return proto.CompactTextString(m) }
func (*ModuleMoveFeedback) ProtoMessage()               {}
func (*ModuleMoveFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ModuleMoveFeedback) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *ModuleMoveFeedback) GetSourceSeriesId() string {
	if m != nil {
		return m.SourceSeriesId
	}
	return ""
}

func (m *ModuleMoveFeedback) GetDestinationSeriesId() string {
	if m != nil {
		return m.DestinationSeriesId
	}
	return ""
}

func (m *ModuleMoveFeedback) GetStatus() com_mindtickle_api_governance_feedback.Status {
	if m != nil {
		return m.Status
	}
	return com_mindtickle_api_governance_feedback.Status_NOT_STARTED
}

func (m *ModuleMoveFeedback) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *ModuleMoveFeedback) GetNewSeries() bool {
	if m != nil {
		return m.NewSeries
	}
	return false
}

func (m *ModuleMoveFeedback) GetSeriesName() string {
	if m != nil {
		return m.SeriesName
	}
	return ""
}

type ModulePublishFeedback struct {
	ModuleId       string                                        `protobuf:"bytes,1,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	SourceSeriesId string                                        `protobuf:"bytes,2,opt,name=source_series_id,json=sourceSeriesId" json:"source_series_id,omitempty"`
	Status         com_mindtickle_api_governance_feedback.Status `protobuf:"varint,3,opt,name=status,enum=com.mindtickle.api.governance.feedback.Status" json:"status,omitempty"`
	FailureReason  string                                        `protobuf:"bytes,4,opt,name=failureReason" json:"failureReason,omitempty"`
}

func (m *ModulePublishFeedback) Reset()                    { *m = ModulePublishFeedback{} }
func (m *ModulePublishFeedback) String() string            { return proto.CompactTextString(m) }
func (*ModulePublishFeedback) ProtoMessage()               {}
func (*ModulePublishFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ModulePublishFeedback) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *ModulePublishFeedback) GetSourceSeriesId() string {
	if m != nil {
		return m.SourceSeriesId
	}
	return ""
}

func (m *ModulePublishFeedback) GetStatus() com_mindtickle_api_governance_feedback.Status {
	if m != nil {
		return m.Status
	}
	return com_mindtickle_api_governance_feedback.Status_NOT_STARTED
}

func (m *ModulePublishFeedback) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

type DeepCopySeriesFeedback struct {
	SourceSeriesId      string                                        `protobuf:"bytes,1,opt,name=source_series_id,json=sourceSeriesId" json:"source_series_id,omitempty"`
	DestinationSeriesId string                                        `protobuf:"bytes,2,opt,name=destination_series_id,json=destinationSeriesId" json:"destination_series_id,omitempty"`
	Status              com_mindtickle_api_governance_feedback.Status `protobuf:"varint,3,opt,name=status,enum=com.mindtickle.api.governance.feedback.Status" json:"status,omitempty"`
	FailureReason       string                                        `protobuf:"bytes,4,opt,name=failureReason" json:"failureReason,omitempty"`
	SeriesName          string                                        `protobuf:"bytes,5,opt,name=series_name,json=seriesName" json:"series_name,omitempty"`
}

func (m *DeepCopySeriesFeedback) Reset()                    { *m = DeepCopySeriesFeedback{} }
func (m *DeepCopySeriesFeedback) String() string            { return proto.CompactTextString(m) }
func (*DeepCopySeriesFeedback) ProtoMessage()               {}
func (*DeepCopySeriesFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeepCopySeriesFeedback) GetSourceSeriesId() string {
	if m != nil {
		return m.SourceSeriesId
	}
	return ""
}

func (m *DeepCopySeriesFeedback) GetDestinationSeriesId() string {
	if m != nil {
		return m.DestinationSeriesId
	}
	return ""
}

func (m *DeepCopySeriesFeedback) GetStatus() com_mindtickle_api_governance_feedback.Status {
	if m != nil {
		return m.Status
	}
	return com_mindtickle_api_governance_feedback.Status_NOT_STARTED
}

func (m *DeepCopySeriesFeedback) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *DeepCopySeriesFeedback) GetSeriesName() string {
	if m != nil {
		return m.SeriesName
	}
	return ""
}

type ModuleArchiveFeedback struct {
	SeriesId      string                                        `protobuf:"bytes,1,opt,name=series_id,json=seriesId" json:"series_id,omitempty"`
	ModuleId      string                                        `protobuf:"bytes,2,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	Status        com_mindtickle_api_governance_feedback.Status `protobuf:"varint,3,opt,name=status,enum=com.mindtickle.api.governance.feedback.Status" json:"status,omitempty"`
	FailureReason string                                        `protobuf:"bytes,4,opt,name=failureReason" json:"failureReason,omitempty"`
}

func (m *ModuleArchiveFeedback) Reset()                    { *m = ModuleArchiveFeedback{} }
func (m *ModuleArchiveFeedback) String() string            { return proto.CompactTextString(m) }
func (*ModuleArchiveFeedback) ProtoMessage()               {}
func (*ModuleArchiveFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ModuleArchiveFeedback) GetSeriesId() string {
	if m != nil {
		return m.SeriesId
	}
	return ""
}

func (m *ModuleArchiveFeedback) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *ModuleArchiveFeedback) GetStatus() com_mindtickle_api_governance_feedback.Status {
	if m != nil {
		return m.Status
	}
	return com_mindtickle_api_governance_feedback.Status_NOT_STARTED
}

func (m *ModuleArchiveFeedback) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

type ModuleDeleteFeedback struct {
	SeriesId      string                                        `protobuf:"bytes,1,opt,name=series_id,json=seriesId" json:"series_id,omitempty"`
	ModuleId      string                                        `protobuf:"bytes,2,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	Status        com_mindtickle_api_governance_feedback.Status `protobuf:"varint,3,opt,name=status,enum=com.mindtickle.api.governance.feedback.Status" json:"status,omitempty"`
	FailureReason string                                        `protobuf:"bytes,4,opt,name=failureReason" json:"failureReason,omitempty"`
}

func (m *ModuleDeleteFeedback) Reset()                    { *m = ModuleDeleteFeedback{} }
func (m *ModuleDeleteFeedback) String() string            { return proto.CompactTextString(m) }
func (*ModuleDeleteFeedback) ProtoMessage()               {}
func (*ModuleDeleteFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ModuleDeleteFeedback) GetSeriesId() string {
	if m != nil {
		return m.SeriesId
	}
	return ""
}

func (m *ModuleDeleteFeedback) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *ModuleDeleteFeedback) GetStatus() com_mindtickle_api_governance_feedback.Status {
	if m != nil {
		return m.Status
	}
	return com_mindtickle_api_governance_feedback.Status_NOT_STARTED
}

func (m *ModuleDeleteFeedback) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func init() {
	proto.RegisterType((*BulkModuleOpsFeedbackDetails)(nil), "com.mindtickle.api.governance.governanceFeedback.BulkModuleOpsFeedbackDetails")
	proto.RegisterType((*ModuleOpsFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.ModuleOpsFeedback")
	proto.RegisterType((*ModuleCopyFromArchiveFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.ModuleCopyFromArchiveFeedback")
	proto.RegisterType((*ModuleCopyFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.ModuleCopyFeedback")
	proto.RegisterType((*ModuleMirrorFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.ModuleMirrorFeedback")
	proto.RegisterType((*ModuleMoveFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.ModuleMoveFeedback")
	proto.RegisterType((*ModulePublishFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.ModulePublishFeedback")
	proto.RegisterType((*DeepCopySeriesFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.DeepCopySeriesFeedback")
	proto.RegisterType((*ModuleArchiveFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.ModuleArchiveFeedback")
	proto.RegisterType((*ModuleDeleteFeedback)(nil), "com.mindtickle.api.governance.governanceFeedback.ModuleDeleteFeedback")
}

func init() { proto.RegisterFile("governanceFeedback.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 687 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0xcf, 0x4e, 0xdb, 0x4e,
	0x10, 0xfe, 0xd9, 0x40, 0x88, 0x17, 0xfd, 0x50, 0x59, 0x08, 0xd0, 0x3f, 0xa8, 0x6d, 0xd4, 0x03,
	0x97, 0x3a, 0x55, 0x7a, 0xae, 0xaa, 0x42, 0x44, 0xe1, 0x90, 0x52, 0x99, 0x9e, 0x7a, 0x41, 0x8e,
	0x77, 0x80, 0x15, 0x5e, 0xaf, 0xe5, 0xb5, 0xa1, 0x5c, 0x2a, 0xf5, 0xc0, 0x13, 0xf4, 0x58, 0xa9,
	0x6f, 0xd2, 0xf6, 0x05, 0x78, 0xa8, 0x8a, 0xb5, 0x8d, 0xd7, 0x59, 0x97, 0xfc, 0x43, 0xa8, 0x95,
	0xb8, 0x45, 0xb3, 0x3b, 0x33, 0xdf, 0x7c, 0xdf, 0xcc, 0x6c, 0x8c, 0x56, 0x0f, 0xf9, 0x09, 0x44,
	0x81, 0x1b, 0x78, 0xb0, 0x05, 0x40, 0x7a, 0xae, 0x77, 0x6c, 0x87, 0x11, 0x8f, 0x39, 0x7e, 0xe1,
	0x71, 0x66, 0x33, 0x1a, 0x90, 0x98, 0x7a, 0xc7, 0x3e, 0xd8, 0x6e, 0x48, 0xed, 0xe2, 0xb2, 0xad,
	0xfb, 0x3d, 0x58, 0x39, 0xc8, 0x7e, 0xb5, 0x0e, 0x4a, 0xa1, 0x9a, 0x5f, 0x0d, 0xf4, 0x68, 0x23,
	0xf1, 0x8f, 0xbb, 0x9c, 0x24, 0x3e, 0xec, 0x86, 0x22, 0x77, 0xe9, 0x40, 0xec, 0x52, 0x5f, 0x60,
	0x81, 0x16, 0x99, 0x3c, 0xdb, 0xe7, 0xa1, 0xd8, 0xcf, 0xbd, 0x57, 0x8d, 0x27, 0x53, 0xeb, 0x73,
	0xed, 0x4d, 0x7b, 0x54, 0x24, 0xb6, 0x96, 0xc8, 0x59, 0x60, 0xfd, 0xa6, 0xe6, 0x45, 0x1d, 0x2d,
	0x68, 0x17, 0xf1, 0x27, 0xb4, 0x94, 0x41, 0xf1, 0x78, 0x78, 0xa6, 0x62, 0x31, 0xd6, 0xe7, 0xda,
	0x9d, 0x71, 0xb1, 0x6c, 0xf2, 0xf0, 0x2c, 0x37, 0x6d, 0xff, 0xe7, 0x60, 0xa6, 0x59, 0xf1, 0x67,
	0xb4, 0x9c, 0x65, 0x66, 0x34, 0x8a, 0x78, 0x54, 0xe4, 0x36, 0x65, 0xee, 0xad, 0x71, 0x73, 0x77,
	0x65, 0x38, 0x25, 0x7b, 0x56, 0x61, 0xd9, 0x8e, 0xbf, 0x18, 0x68, 0x25, 0x03, 0x10, 0x26, 0x3d,
	0x9f, 0x8a, 0xa3, 0x02, 0xc1, 0x94, 0x44, 0xf0, 0x76, 0x5c, 0x04, 0xef, 0xd3, 0x78, 0x0a, 0x84,
	0x06, 0xab, 0x3a, 0xc0, 0xdf, 0x0c, 0xf4, 0xb4, 0x44, 0x7f, 0xc4, 0xd9, 0xbe, 0x1b, 0x79, 0x47,
	0xf4, 0x04, 0x0a, 0x34, 0xd3, 0x12, 0xcd, 0xee, 0x44, 0x5a, 0x44, 0x9c, 0xbd, 0x49, 0xe3, 0x2a,
	0xa8, 0xd6, 0xd8, 0x75, 0x17, 0x94, 0xde, 0x60, 0x5c, 0xc5, 0x33, 0x33, 0x59, 0x6f, 0x74, 0x79,
	0x09, 0x44, 0xd6, 0x1b, 0xaa, 0x15, 0x9f, 0x1b, 0xe8, 0x3e, 0x01, 0x08, 0x53, 0x56, 0x04, 0x44,
	0x14, 0x94, 0x39, 0xa9, 0xc9, 0xfc, 0xdb, 0xa3, 0xe7, 0xef, 0x00, 0x84, 0x97, 0xc5, 0xee, 0xc9,
	0x80, 0x0a, 0x86, 0x65, 0x52, 0x79, 0xa2, 0xf6, 0x88, 0xa6, 0xca, 0xec, 0x64, 0x3d, 0xa2, 0xab,
	0x91, 0xf5, 0x48, 0xbf, 0x0a, 0xc5, 0x9c, 0x10, 0xf0, 0x21, 0x56, 0x10, 0xd4, 0x27, 0x9b, 0x93,
	0x8e, 0x0c, 0xa7, 0xcf, 0x49, 0xd9, 0xbe, 0xd1, 0xa8, 0x5c, 0x56, 0xcd, 0xef, 0x26, 0x5a, 0xbb,
	0xb6, 0xbf, 0xf0, 0x43, 0x64, 0x65, 0x8e, 0x94, 0xc8, 0x7d, 0x62, 0x39, 0xf5, 0xd4, 0xb0, 0x43,
	0x70, 0x1b, 0x35, 0x08, 0x88, 0x98, 0x06, 0x6e, 0x4c, 0x79, 0x90, 0x4b, 0x4c, 0x89, 0x1c, 0x7e,
	0xcb, 0x59, 0x54, 0x0e, 0x53, 0x4d, 0x76, 0x08, 0xde, 0x42, 0x35, 0x11, 0xbb, 0x71, 0x22, 0xe4,
	0x7c, 0xce, 0xb7, 0xed, 0x01, 0x95, 0x5f, 0xad, 0xe5, 0x3d, 0xe9, 0xe5, 0x64, 0xde, 0xf8, 0x19,
	0xfa, 0xff, 0xc0, 0xa5, 0x7e, 0x12, 0x81, 0x03, 0xae, 0xe0, 0x81, 0x1c, 0x30, 0xcb, 0x29, 0x1b,
	0xf1, 0x1a, 0x42, 0x01, 0x9c, 0x66, 0xc8, 0x64, 0xcf, 0xd7, 0x1d, 0x2b, 0x80, 0xd3, 0x14, 0x0e,
	0x7e, 0x8c, 0xe6, 0x32, 0xd0, 0x81, 0xcb, 0x40, 0xf6, 0xa4, 0xe5, 0xa0, 0xd4, 0xf4, 0xce, 0x65,
	0xd0, 0xfc, 0x61, 0x22, 0xac, 0x2f, 0xc3, 0xeb, 0x59, 0x59, 0x47, 0xf7, 0x04, 0x4f, 0x22, 0x0f,
	0x34, 0x42, 0xe6, 0x53, 0xfb, 0x15, 0x17, 0x7f, 0xe4, 0x6f, 0x6a, 0x18, 0xfe, 0xa6, 0x6f, 0x96,
	0xbf, 0x99, 0xc1, 0xfc, 0xd5, 0x06, 0xf0, 0x37, 0xab, 0xf1, 0xf7, 0xcb, 0x44, 0x4b, 0x55, 0x0b,
	0xfd, 0x8e, 0xc1, 0x61, 0x19, 0x2c, 0x3a, 0xb0, 0xb4, 0x5c, 0xef, 0xf8, 0x1b, 0x92, 0xbf, 0x0b,
	0x03, 0x35, 0x2a, 0x1f, 0xf4, 0x9b, 0xa2, 0xf0, 0x56, 0x17, 0x5a, 0xf3, 0xdc, 0x44, 0xcb, 0xd5,
	0x2f, 0x60, 0x25, 0x64, 0x63, 0x34, 0xd5, 0xff, 0x9a, 0xbd, 0xdd, 0x27, 0xeb, 0x8c, 0xbe, 0x58,
	0xae, 0x64, 0xad, 0x78, 0xb1, 0xfa, 0xeb, 0xaf, 0x8b, 0xbc, 0x8a, 0x92, 0xe6, 0x66, 0x9f, 0xe6,
	0xb7, 0xab, 0xe4, 0x4f, 0x23, 0x5f, 0x8d, 0xe5, 0xb7, 0xfa, 0x5f, 0x29, 0x60, 0xe3, 0xf5, 0xc7,
	0x57, 0x87, 0x34, 0x3e, 0x4a, 0x7a, 0x97, 0x59, 0x5a, 0x5d, 0x1a, 0x90, 0x0f, 0x32, 0x4b, 0xab,
	0xc8, 0xf0, 0x5c, 0x7e, 0x4b, 0x89, 0x56, 0xd8, 0x6b, 0xe9, 0xff, 0x60, 0x7a, 0x35, 0x79, 0xfa,
	0xf2, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x92, 0xde, 0x0e, 0x48, 0xd0, 0x0d, 0x00, 0x00,
}
