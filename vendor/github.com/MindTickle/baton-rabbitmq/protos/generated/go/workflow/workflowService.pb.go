// Code generated by protoc-gen-go. DO NOT EDIT.
// source: workflowService.proto

package workflow

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OperationState int32

const (
	OperationState_UNDEFINED_OPERATION_STATE OperationState = 0
	OperationState_OPERATION_CREATED         OperationState = 1
	OperationState_OPERATION_SCHEDULED       OperationState = 2
	OperationState_OPERATION_FAILED          OperationState = 3
	OperationState_OPERATION_SUCCESS         OperationState = 4
	OperationState_OPERATION_PROCESSED       OperationState = 5
)

var OperationState_name = map[int32]string{
	0: "UNDEFINED_OPERATION_STATE",
	1: "OPERATION_CREATED",
	2: "OPERATION_SCHEDULED",
	3: "OPERATION_FAILED",
	4: "OPERATION_SUCCESS",
	5: "OPERATION_PROCESSED",
}

var OperationState_value = map[string]int32{
	"UNDEFINED_OPERATION_STATE": 0,
	"OPERATION_CREATED":         1,
	"OPERATION_SCHEDULED":       2,
	"OPERATION_FAILED":          3,
	"OPERATION_SUCCESS":         4,
	"OPERATION_PROCESSED":       5,
}

func (x OperationState) String() string {
	return proto.EnumName(OperationState_name, int32(x))
}

func (OperationState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{0}
}

type WorkflowState int32

const (
	WorkflowState_UNDEFINED_WORKFLOW_STATE WorkflowState = 0
	WorkflowState_WORKFLOW_CREATED         WorkflowState = 1
	WorkflowState_WORKFLOW_PROCESSING      WorkflowState = 2
	WorkflowState_WORKFLOW_FAILED          WorkflowState = 3
	WorkflowState_WORKFLOW_SUCCESS         WorkflowState = 4
	WorkflowState_WORKFLOW_ABORTED         WorkflowState = 5
	WorkflowState_WORKFLOW_RESTARTED       WorkflowState = 6
	WorkflowState_WORKFLOW_DEADLETTER      WorkflowState = 7
)

var WorkflowState_name = map[int32]string{
	0: "UNDEFINED_WORKFLOW_STATE",
	1: "WORKFLOW_CREATED",
	2: "WORKFLOW_PROCESSING",
	3: "WORKFLOW_FAILED",
	4: "WORKFLOW_SUCCESS",
	5: "WORKFLOW_ABORTED",
	6: "WORKFLOW_RESTARTED",
	7: "WORKFLOW_DEADLETTER",
}

var WorkflowState_value = map[string]int32{
	"UNDEFINED_WORKFLOW_STATE": 0,
	"WORKFLOW_CREATED":         1,
	"WORKFLOW_PROCESSING":      2,
	"WORKFLOW_FAILED":          3,
	"WORKFLOW_SUCCESS":         4,
	"WORKFLOW_ABORTED":         5,
	"WORKFLOW_RESTARTED":       6,
	"WORKFLOW_DEADLETTER":      7,
}

func (x WorkflowState) String() string {
	return proto.EnumName(WorkflowState_name, int32(x))
}

func (WorkflowState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{1}
}

type QueryWorkflowFieldMask int32

const (
	QueryWorkflowFieldMask_UNDEFINED_WORKFLOW_QUERY_FIELD_MASK QueryWorkflowFieldMask = 0
	// Mask to fill data in workflow fetch.
	QueryWorkflowFieldMask_BULK_REQUEST_DATA QueryWorkflowFieldMask = 1
	// Mask to fill operations count in workflow  fetch.
	QueryWorkflowFieldMask_BULK_REQUEST_PROGRESS QueryWorkflowFieldMask = 2
	// Mask to fill operations ids of submitted, failed and success operations in workflow fetch.
	QueryWorkflowFieldMask_OPERATION_DETAILS QueryWorkflowFieldMask = 3
	// Mask to fill sub_contexts map in workflow context.
	QueryWorkflowFieldMask_SUB_CONTEXT QueryWorkflowFieldMask = 4
)

var QueryWorkflowFieldMask_name = map[int32]string{
	0: "UNDEFINED_WORKFLOW_QUERY_FIELD_MASK",
	1: "BULK_REQUEST_DATA",
	2: "BULK_REQUEST_PROGRESS",
	3: "OPERATION_DETAILS",
	4: "SUB_CONTEXT",
}

var QueryWorkflowFieldMask_value = map[string]int32{
	"UNDEFINED_WORKFLOW_QUERY_FIELD_MASK": 0,
	"BULK_REQUEST_DATA":                   1,
	"BULK_REQUEST_PROGRESS":               2,
	"OPERATION_DETAILS":                   3,
	"SUB_CONTEXT":                         4,
}

func (x QueryWorkflowFieldMask) String() string {
	return proto.EnumName(QueryWorkflowFieldMask_name, int32(x))
}

func (QueryWorkflowFieldMask) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{2}
}

type UpdateWorkflowFieldMask int32

const (
	UpdateWorkflowFieldMask_UNDEFINED_WORKFLOW_UPDATE_FIELD_MASK UpdateWorkflowFieldMask = 0
	// Mask to update state.
	UpdateWorkflowFieldMask_BULK_REQUEST_STATE UpdateWorkflowFieldMask = 1
)

var UpdateWorkflowFieldMask_name = map[int32]string{
	0: "UNDEFINED_WORKFLOW_UPDATE_FIELD_MASK",
	1: "BULK_REQUEST_STATE",
}

var UpdateWorkflowFieldMask_value = map[string]int32{
	"UNDEFINED_WORKFLOW_UPDATE_FIELD_MASK": 0,
	"BULK_REQUEST_STATE":                   1,
}

func (x UpdateWorkflowFieldMask) String() string {
	return proto.EnumName(UpdateWorkflowFieldMask_name, int32(x))
}

func (UpdateWorkflowFieldMask) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{3}
}

type OperationSortBy int32

const (
	// operation_id
	OperationSortBy_DEFAULT_SORT_BY   OperationSortBy = 0
	OperationSortBy_OPERATION_ID      OperationSortBy = 1
	OperationSortBy_SERIAL_NUMBER     OperationSortBy = 2
	OperationSortBy_CREATED_TIME      OperationSortBy = 3
	OperationSortBy_LAST_UPDATED_TIME OperationSortBy = 4
)

var OperationSortBy_name = map[int32]string{
	0: "DEFAULT_SORT_BY",
	1: "OPERATION_ID",
	2: "SERIAL_NUMBER",
	3: "CREATED_TIME",
	4: "LAST_UPDATED_TIME",
}

var OperationSortBy_value = map[string]int32{
	"DEFAULT_SORT_BY":   0,
	"OPERATION_ID":      1,
	"SERIAL_NUMBER":     2,
	"CREATED_TIME":      3,
	"LAST_UPDATED_TIME": 4,
}

func (x OperationSortBy) String() string {
	return proto.EnumName(OperationSortBy_name, int32(x))
}

func (OperationSortBy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{4}
}

type Workflow struct {
	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Namespace       string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	OrgId           string `protobuf:"bytes,3,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	AuthId          string `protobuf:"bytes,4,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`
	BulkRequestType string `protobuf:"bytes,5,opt,name=bulk_request_type,json=bulkRequestType,proto3" json:"bulk_request_type,omitempty"`
	// default empty on read. values are listed based on mask -> BULK_REQUEST_DATA
	BulkRequest   string        `protobuf:"bytes,6,opt,name=bulk_request,json=bulkRequest,proto3" json:"bulk_request,omitempty"`
	WorkflowState WorkflowState `protobuf:"varint,7,opt,name=workflow_state,json=workflowState,proto3,enum=com.mindtickle.baton.pb.workflowservice.WorkflowState" json:"workflow_state,omitempty"`
	// read only property. values are listed based on mask -> BULK_REQUEST_PROGRESS
	Submitted uint32 `protobuf:"varint,8,opt,name=submitted,proto3" json:"submitted,omitempty"`
	// read only property. values are listed based on mask -> BULK_REQUEST_PROGRESS
	Success uint32 `protobuf:"varint,9,opt,name=success,proto3" json:"success,omitempty"`
	// read only property. values are listed based on mask -> BULK_REQUEST_PROGRESS
	Failed uint32 `protobuf:"varint,10,opt,name=failed,proto3" json:"failed,omitempty"`
	// read only property. values are listed based on mask -> OPERATION_DETAILS
	SubmittedOperations []int64 `protobuf:"varint,11,rep,packed,name=submitted_operations,json=submittedOperations,proto3" json:"submitted_operations,omitempty"`
	// read only property. values are listed based on mask -> OPERATION_DETAILS
	FailedOperations []int64 `protobuf:"varint,12,rep,packed,name=failed_operations,json=failedOperations,proto3" json:"failed_operations,omitempty"`
	// read only property. values are listed based on mask -> OPERATION_DETAILS
	SuccessOperations []int64 `protobuf:"varint,13,rep,packed,name=success_operations,json=successOperations,proto3" json:"success_operations,omitempty"`
	// read only property
	CreatedTime string `protobuf:"bytes,14,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// read only property
	LastUpdatedTime string `protobuf:"bytes,15,opt,name=last_updated_time,json=lastUpdatedTime,proto3" json:"last_updated_time,omitempty"`
	// read only property
	CompletedTime string `protobuf:"bytes,16,opt,name=completed_time,json=completedTime,proto3" json:"completed_time,omitempty"`
	// default empty on read. values are listed based on mask -> SUB_CONTEXT
	// LIMIT : 10 types of sub_contexts can be stored at max for a workflow.
	SubContexts          map[string]*SubContext `protobuf:"bytes,17,rep,name=sub_contexts,json=subContexts,proto3" json:"sub_contexts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{0}
}

func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (m *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(m, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Workflow) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Workflow) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Workflow) GetAuthId() string {
	if m != nil {
		return m.AuthId
	}
	return ""
}

func (m *Workflow) GetBulkRequestType() string {
	if m != nil {
		return m.BulkRequestType
	}
	return ""
}

func (m *Workflow) GetBulkRequest() string {
	if m != nil {
		return m.BulkRequest
	}
	return ""
}

func (m *Workflow) GetWorkflowState() WorkflowState {
	if m != nil {
		return m.WorkflowState
	}
	return WorkflowState_UNDEFINED_WORKFLOW_STATE
}

func (m *Workflow) GetSubmitted() uint32 {
	if m != nil {
		return m.Submitted
	}
	return 0
}

func (m *Workflow) GetSuccess() uint32 {
	if m != nil {
		return m.Success
	}
	return 0
}

func (m *Workflow) GetFailed() uint32 {
	if m != nil {
		return m.Failed
	}
	return 0
}

func (m *Workflow) GetSubmittedOperations() []int64 {
	if m != nil {
		return m.SubmittedOperations
	}
	return nil
}

func (m *Workflow) GetFailedOperations() []int64 {
	if m != nil {
		return m.FailedOperations
	}
	return nil
}

func (m *Workflow) GetSuccessOperations() []int64 {
	if m != nil {
		return m.SuccessOperations
	}
	return nil
}

func (m *Workflow) GetCreatedTime() string {
	if m != nil {
		return m.CreatedTime
	}
	return ""
}

func (m *Workflow) GetLastUpdatedTime() string {
	if m != nil {
		return m.LastUpdatedTime
	}
	return ""
}

func (m *Workflow) GetCompletedTime() string {
	if m != nil {
		return m.CompletedTime
	}
	return ""
}

func (m *Workflow) GetSubContexts() map[string]*SubContext {
	if m != nil {
		return m.SubContexts
	}
	return nil
}

type RestartWorkflowRequest struct {
	WorkflowId           int64    `protobuf:"varint,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestartWorkflowRequest) Reset()         { *m = RestartWorkflowRequest{} }
func (m *RestartWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*RestartWorkflowRequest) ProtoMessage()    {}
func (*RestartWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{1}
}

func (m *RestartWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestartWorkflowRequest.Unmarshal(m, b)
}
func (m *RestartWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestartWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *RestartWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestartWorkflowRequest.Merge(m, src)
}
func (m *RestartWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_RestartWorkflowRequest.Size(m)
}
func (m *RestartWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestartWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestartWorkflowRequest proto.InternalMessageInfo

func (m *RestartWorkflowRequest) GetWorkflowId() int64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

type RestartWorkflowResponse struct {
	Workflow             *Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RestartWorkflowResponse) Reset()         { *m = RestartWorkflowResponse{} }
func (m *RestartWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*RestartWorkflowResponse) ProtoMessage()    {}
func (*RestartWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{2}
}

func (m *RestartWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestartWorkflowResponse.Unmarshal(m, b)
}
func (m *RestartWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestartWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *RestartWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestartWorkflowResponse.Merge(m, src)
}
func (m *RestartWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_RestartWorkflowResponse.Size(m)
}
func (m *RestartWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestartWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestartWorkflowResponse proto.InternalMessageInfo

func (m *RestartWorkflowResponse) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

type SubContext struct {
	App           string `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
	SubContextKey string `protobuf:"bytes,2,opt,name=sub_context_key,json=subContextKey,proto3" json:"sub_context_key,omitempty"`
	// LIMIT : 10K characters are supported for sub_context_properties.
	SubContext           string   `protobuf:"bytes,3,opt,name=sub_context,json=subContext,proto3" json:"sub_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubContext) Reset()         { *m = SubContext{} }
func (m *SubContext) String() string { return proto.CompactTextString(m) }
func (*SubContext) ProtoMessage()    {}
func (*SubContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{3}
}

func (m *SubContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubContext.Unmarshal(m, b)
}
func (m *SubContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubContext.Marshal(b, m, deterministic)
}
func (m *SubContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubContext.Merge(m, src)
}
func (m *SubContext) XXX_Size() int {
	return xxx_messageInfo_SubContext.Size(m)
}
func (m *SubContext) XXX_DiscardUnknown() {
	xxx_messageInfo_SubContext.DiscardUnknown(m)
}

var xxx_messageInfo_SubContext proto.InternalMessageInfo

func (m *SubContext) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *SubContext) GetSubContextKey() string {
	if m != nil {
		return m.SubContextKey
	}
	return ""
}

func (m *SubContext) GetSubContext() string {
	if m != nil {
		return m.SubContext
	}
	return ""
}

type CreateSubContextRequest struct {
	SubContext           *SubContext `protobuf:"bytes,1,opt,name=sub_context,json=subContext,proto3" json:"sub_context,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateSubContextRequest) Reset()         { *m = CreateSubContextRequest{} }
func (m *CreateSubContextRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSubContextRequest) ProtoMessage()    {}
func (*CreateSubContextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{4}
}

func (m *CreateSubContextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubContextRequest.Unmarshal(m, b)
}
func (m *CreateSubContextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubContextRequest.Marshal(b, m, deterministic)
}
func (m *CreateSubContextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubContextRequest.Merge(m, src)
}
func (m *CreateSubContextRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSubContextRequest.Size(m)
}
func (m *CreateSubContextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubContextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubContextRequest proto.InternalMessageInfo

func (m *CreateSubContextRequest) GetSubContext() *SubContext {
	if m != nil {
		return m.SubContext
	}
	return nil
}

type CreateSubContextResponse struct {
	SubContext           *SubContext `protobuf:"bytes,1,opt,name=sub_context,json=subContext,proto3" json:"sub_context,omitempty"`
	WorkflowId           int64       `protobuf:"varint,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateSubContextResponse) Reset()         { *m = CreateSubContextResponse{} }
func (m *CreateSubContextResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSubContextResponse) ProtoMessage()    {}
func (*CreateSubContextResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{5}
}

func (m *CreateSubContextResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubContextResponse.Unmarshal(m, b)
}
func (m *CreateSubContextResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubContextResponse.Marshal(b, m, deterministic)
}
func (m *CreateSubContextResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubContextResponse.Merge(m, src)
}
func (m *CreateSubContextResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSubContextResponse.Size(m)
}
func (m *CreateSubContextResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubContextResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubContextResponse proto.InternalMessageInfo

func (m *CreateSubContextResponse) GetSubContext() *SubContext {
	if m != nil {
		return m.SubContext
	}
	return nil
}

func (m *CreateSubContextResponse) GetWorkflowId() int64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

type AttachSubContextRequest struct {
	SubContext           *SubContext `protobuf:"bytes,1,opt,name=sub_context,json=subContext,proto3" json:"sub_context,omitempty"`
	WorkflowId           int64       `protobuf:"varint,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AttachSubContextRequest) Reset()         { *m = AttachSubContextRequest{} }
func (m *AttachSubContextRequest) String() string { return proto.CompactTextString(m) }
func (*AttachSubContextRequest) ProtoMessage()    {}
func (*AttachSubContextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{6}
}

func (m *AttachSubContextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachSubContextRequest.Unmarshal(m, b)
}
func (m *AttachSubContextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachSubContextRequest.Marshal(b, m, deterministic)
}
func (m *AttachSubContextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachSubContextRequest.Merge(m, src)
}
func (m *AttachSubContextRequest) XXX_Size() int {
	return xxx_messageInfo_AttachSubContextRequest.Size(m)
}
func (m *AttachSubContextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachSubContextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttachSubContextRequest proto.InternalMessageInfo

func (m *AttachSubContextRequest) GetSubContext() *SubContext {
	if m != nil {
		return m.SubContext
	}
	return nil
}

func (m *AttachSubContextRequest) GetWorkflowId() int64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

type AttachSubContextResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachSubContextResponse) Reset()         { *m = AttachSubContextResponse{} }
func (m *AttachSubContextResponse) String() string { return proto.CompactTextString(m) }
func (*AttachSubContextResponse) ProtoMessage()    {}
func (*AttachSubContextResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{7}
}

func (m *AttachSubContextResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachSubContextResponse.Unmarshal(m, b)
}
func (m *AttachSubContextResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachSubContextResponse.Marshal(b, m, deterministic)
}
func (m *AttachSubContextResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachSubContextResponse.Merge(m, src)
}
func (m *AttachSubContextResponse) XXX_Size() int {
	return xxx_messageInfo_AttachSubContextResponse.Size(m)
}
func (m *AttachSubContextResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachSubContextResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttachSubContextResponse proto.InternalMessageInfo

type GetSubContextRequest struct {
	SubContextKey        string   `protobuf:"bytes,1,opt,name=sub_context_key,json=subContextKey,proto3" json:"sub_context_key,omitempty"`
	WorkflowId           int64    `protobuf:"varint,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubContextRequest) Reset()         { *m = GetSubContextRequest{} }
func (m *GetSubContextRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubContextRequest) ProtoMessage()    {}
func (*GetSubContextRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{8}
}

func (m *GetSubContextRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubContextRequest.Unmarshal(m, b)
}
func (m *GetSubContextRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubContextRequest.Marshal(b, m, deterministic)
}
func (m *GetSubContextRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubContextRequest.Merge(m, src)
}
func (m *GetSubContextRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubContextRequest.Size(m)
}
func (m *GetSubContextRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubContextRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubContextRequest proto.InternalMessageInfo

func (m *GetSubContextRequest) GetSubContextKey() string {
	if m != nil {
		return m.SubContextKey
	}
	return ""
}

func (m *GetSubContextRequest) GetWorkflowId() int64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

type GetSubContextResponse struct {
	SubContext           *SubContext `protobuf:"bytes,1,opt,name=sub_context,json=subContext,proto3" json:"sub_context,omitempty"`
	WorkflowId           int64       `protobuf:"varint,2,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetSubContextResponse) Reset()         { *m = GetSubContextResponse{} }
func (m *GetSubContextResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubContextResponse) ProtoMessage()    {}
func (*GetSubContextResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{9}
}

func (m *GetSubContextResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubContextResponse.Unmarshal(m, b)
}
func (m *GetSubContextResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubContextResponse.Marshal(b, m, deterministic)
}
func (m *GetSubContextResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubContextResponse.Merge(m, src)
}
func (m *GetSubContextResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubContextResponse.Size(m)
}
func (m *GetSubContextResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubContextResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubContextResponse proto.InternalMessageInfo

func (m *GetSubContextResponse) GetSubContext() *SubContext {
	if m != nil {
		return m.SubContext
	}
	return nil
}

func (m *GetSubContextResponse) GetWorkflowId() int64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

type WorkflowIdentity struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StrId                string   `protobuf:"bytes,2,opt,name=str_id,json=strId,proto3" json:"str_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowIdentity) Reset()         { *m = WorkflowIdentity{} }
func (m *WorkflowIdentity) String() string { return proto.CompactTextString(m) }
func (*WorkflowIdentity) ProtoMessage()    {}
func (*WorkflowIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{10}
}

func (m *WorkflowIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowIdentity.Unmarshal(m, b)
}
func (m *WorkflowIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowIdentity.Marshal(b, m, deterministic)
}
func (m *WorkflowIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowIdentity.Merge(m, src)
}
func (m *WorkflowIdentity) XXX_Size() int {
	return xxx_messageInfo_WorkflowIdentity.Size(m)
}
func (m *WorkflowIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowIdentity proto.InternalMessageInfo

func (m *WorkflowIdentity) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WorkflowIdentity) GetStrId() string {
	if m != nil {
		return m.StrId
	}
	return ""
}

type CreateWorkflowRequest struct {
	Workflow             *Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateWorkflowRequest) Reset()         { *m = CreateWorkflowRequest{} }
func (m *CreateWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowRequest) ProtoMessage()    {}
func (*CreateWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{11}
}

func (m *CreateWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowRequest.Unmarshal(m, b)
}
func (m *CreateWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowRequest.Merge(m, src)
}
func (m *CreateWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowRequest.Size(m)
}
func (m *CreateWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowRequest proto.InternalMessageInfo

func (m *CreateWorkflowRequest) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

type CreateWorkflowResponse struct {
	Workflow             *Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateWorkflowResponse) Reset()         { *m = CreateWorkflowResponse{} }
func (m *CreateWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowResponse) ProtoMessage()    {}
func (*CreateWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{12}
}

func (m *CreateWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowResponse.Unmarshal(m, b)
}
func (m *CreateWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowResponse.Merge(m, src)
}
func (m *CreateWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowResponse.Size(m)
}
func (m *CreateWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowResponse proto.InternalMessageInfo

func (m *CreateWorkflowResponse) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

type UpdateWorkflowRequest struct {
	Workflow             *Workflow                 `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	Masks                []UpdateWorkflowFieldMask `protobuf:"varint,2,rep,packed,name=masks,proto3,enum=com.mindtickle.baton.pb.workflowservice.UpdateWorkflowFieldMask" json:"masks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateWorkflowRequest) Reset()         { *m = UpdateWorkflowRequest{} }
func (m *UpdateWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowRequest) ProtoMessage()    {}
func (*UpdateWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{13}
}

func (m *UpdateWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowRequest.Unmarshal(m, b)
}
func (m *UpdateWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowRequest.Merge(m, src)
}
func (m *UpdateWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowRequest.Size(m)
}
func (m *UpdateWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowRequest proto.InternalMessageInfo

func (m *UpdateWorkflowRequest) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

func (m *UpdateWorkflowRequest) GetMasks() []UpdateWorkflowFieldMask {
	if m != nil {
		return m.Masks
	}
	return nil
}

type UpdateWorkflowResponse struct {
	Workflow             *Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateWorkflowResponse) Reset()         { *m = UpdateWorkflowResponse{} }
func (m *UpdateWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkflowResponse) ProtoMessage()    {}
func (*UpdateWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{14}
}

func (m *UpdateWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkflowResponse.Unmarshal(m, b)
}
func (m *UpdateWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *UpdateWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkflowResponse.Merge(m, src)
}
func (m *UpdateWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkflowResponse.Size(m)
}
func (m *UpdateWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkflowResponse proto.InternalMessageInfo

func (m *UpdateWorkflowResponse) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

type FetchWorkflowRequest struct {
	Identity             *WorkflowIdentity        `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Masks                []QueryWorkflowFieldMask `protobuf:"varint,2,rep,packed,name=masks,proto3,enum=com.mindtickle.baton.pb.workflowservice.QueryWorkflowFieldMask" json:"masks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FetchWorkflowRequest) Reset()         { *m = FetchWorkflowRequest{} }
func (m *FetchWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*FetchWorkflowRequest) ProtoMessage()    {}
func (*FetchWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{15}
}

func (m *FetchWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchWorkflowRequest.Unmarshal(m, b)
}
func (m *FetchWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *FetchWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchWorkflowRequest.Merge(m, src)
}
func (m *FetchWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_FetchWorkflowRequest.Size(m)
}
func (m *FetchWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchWorkflowRequest proto.InternalMessageInfo

func (m *FetchWorkflowRequest) GetIdentity() *WorkflowIdentity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *FetchWorkflowRequest) GetMasks() []QueryWorkflowFieldMask {
	if m != nil {
		return m.Masks
	}
	return nil
}

type FetchWorkflowResponse struct {
	Workflow             *Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FetchWorkflowResponse) Reset()         { *m = FetchWorkflowResponse{} }
func (m *FetchWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*FetchWorkflowResponse) ProtoMessage()    {}
func (*FetchWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{16}
}

func (m *FetchWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchWorkflowResponse.Unmarshal(m, b)
}
func (m *FetchWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *FetchWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchWorkflowResponse.Merge(m, src)
}
func (m *FetchWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_FetchWorkflowResponse.Size(m)
}
func (m *FetchWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchWorkflowResponse proto.InternalMessageInfo

func (m *FetchWorkflowResponse) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

type FetchWorkflowsRequest struct {
	Identities           []*WorkflowIdentity      `protobuf:"bytes,1,rep,name=identities,proto3" json:"identities,omitempty"`
	Masks                []QueryWorkflowFieldMask `protobuf:"varint,2,rep,packed,name=masks,proto3,enum=com.mindtickle.baton.pb.workflowservice.QueryWorkflowFieldMask" json:"masks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *FetchWorkflowsRequest) Reset()         { *m = FetchWorkflowsRequest{} }
func (m *FetchWorkflowsRequest) String() string { return proto.CompactTextString(m) }
func (*FetchWorkflowsRequest) ProtoMessage()    {}
func (*FetchWorkflowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{17}
}

func (m *FetchWorkflowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchWorkflowsRequest.Unmarshal(m, b)
}
func (m *FetchWorkflowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchWorkflowsRequest.Marshal(b, m, deterministic)
}
func (m *FetchWorkflowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchWorkflowsRequest.Merge(m, src)
}
func (m *FetchWorkflowsRequest) XXX_Size() int {
	return xxx_messageInfo_FetchWorkflowsRequest.Size(m)
}
func (m *FetchWorkflowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchWorkflowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchWorkflowsRequest proto.InternalMessageInfo

func (m *FetchWorkflowsRequest) GetIdentities() []*WorkflowIdentity {
	if m != nil {
		return m.Identities
	}
	return nil
}

func (m *FetchWorkflowsRequest) GetMasks() []QueryWorkflowFieldMask {
	if m != nil {
		return m.Masks
	}
	return nil
}

type FetchWorkflowsResponse struct {
	Workflows            map[int64]*Workflow `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FetchWorkflowsResponse) Reset()         { *m = FetchWorkflowsResponse{} }
func (m *FetchWorkflowsResponse) String() string { return proto.CompactTextString(m) }
func (*FetchWorkflowsResponse) ProtoMessage()    {}
func (*FetchWorkflowsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{18}
}

func (m *FetchWorkflowsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchWorkflowsResponse.Unmarshal(m, b)
}
func (m *FetchWorkflowsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchWorkflowsResponse.Marshal(b, m, deterministic)
}
func (m *FetchWorkflowsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchWorkflowsResponse.Merge(m, src)
}
func (m *FetchWorkflowsResponse) XXX_Size() int {
	return xxx_messageInfo_FetchWorkflowsResponse.Size(m)
}
func (m *FetchWorkflowsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchWorkflowsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchWorkflowsResponse proto.InternalMessageInfo

func (m *FetchWorkflowsResponse) GetWorkflows() map[int64]*Workflow {
	if m != nil {
		return m.Workflows
	}
	return nil
}

type Operation struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OrgId                string         `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	SerialNumber         int32          `protobuf:"varint,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	WorkflowId           int64          `protobuf:"varint,4,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	OpData               string         `protobuf:"bytes,5,opt,name=op_data,json=opData,proto3" json:"op_data,omitempty"`
	OpResult             string         `protobuf:"bytes,6,opt,name=op_result,json=opResult,proto3" json:"op_result,omitempty"`
	ResourceName         string         `protobuf:"bytes,7,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	OpName               string         `protobuf:"bytes,8,opt,name=op_name,json=opName,proto3" json:"op_name,omitempty"`
	State                OperationState `protobuf:"varint,9,opt,name=state,proto3,enum=com.mindtickle.baton.pb.workflowservice.OperationState" json:"state,omitempty"`
	DependentOpIds       []int64        `protobuf:"varint,10,rep,packed,name=dependent_op_ids,json=dependentOpIds,proto3" json:"dependent_op_ids,omitempty"`
	DependentOnOpIds     []int64        `protobuf:"varint,11,rep,packed,name=dependent_on_op_ids,json=dependentOnOpIds,proto3" json:"dependent_on_op_ids,omitempty"`
	CreatedTime          int64          `protobuf:"varint,12,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	LastUpdatedTime      int64          `protobuf:"varint,13,opt,name=last_updated_time,json=lastUpdatedTime,proto3" json:"last_updated_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Operation) Reset()         { *m = Operation{} }
func (m *Operation) String() string { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()    {}
func (*Operation) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{19}
}

func (m *Operation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Operation.Unmarshal(m, b)
}
func (m *Operation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Operation.Marshal(b, m, deterministic)
}
func (m *Operation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Operation.Merge(m, src)
}
func (m *Operation) XXX_Size() int {
	return xxx_messageInfo_Operation.Size(m)
}
func (m *Operation) XXX_DiscardUnknown() {
	xxx_messageInfo_Operation.DiscardUnknown(m)
}

var xxx_messageInfo_Operation proto.InternalMessageInfo

func (m *Operation) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Operation) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Operation) GetSerialNumber() int32 {
	if m != nil {
		return m.SerialNumber
	}
	return 0
}

func (m *Operation) GetWorkflowId() int64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

func (m *Operation) GetOpData() string {
	if m != nil {
		return m.OpData
	}
	return ""
}

func (m *Operation) GetOpResult() string {
	if m != nil {
		return m.OpResult
	}
	return ""
}

func (m *Operation) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func (m *Operation) GetOpName() string {
	if m != nil {
		return m.OpName
	}
	return ""
}

func (m *Operation) GetState() OperationState {
	if m != nil {
		return m.State
	}
	return OperationState_UNDEFINED_OPERATION_STATE
}

func (m *Operation) GetDependentOpIds() []int64 {
	if m != nil {
		return m.DependentOpIds
	}
	return nil
}

func (m *Operation) GetDependentOnOpIds() []int64 {
	if m != nil {
		return m.DependentOnOpIds
	}
	return nil
}

func (m *Operation) GetCreatedTime() int64 {
	if m != nil {
		return m.CreatedTime
	}
	return 0
}

func (m *Operation) GetLastUpdatedTime() int64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

type CreateOperationsRequest struct {
	Operations           []*Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateOperationsRequest) Reset()         { *m = CreateOperationsRequest{} }
func (m *CreateOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOperationsRequest) ProtoMessage()    {}
func (*CreateOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{20}
}

func (m *CreateOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOperationsRequest.Unmarshal(m, b)
}
func (m *CreateOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOperationsRequest.Marshal(b, m, deterministic)
}
func (m *CreateOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOperationsRequest.Merge(m, src)
}
func (m *CreateOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOperationsRequest.Size(m)
}
func (m *CreateOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOperationsRequest proto.InternalMessageInfo

func (m *CreateOperationsRequest) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type CreateOperationsResponse struct {
	Operations           []*Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateOperationsResponse) Reset()         { *m = CreateOperationsResponse{} }
func (m *CreateOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*CreateOperationsResponse) ProtoMessage()    {}
func (*CreateOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{21}
}

func (m *CreateOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOperationsResponse.Unmarshal(m, b)
}
func (m *CreateOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOperationsResponse.Marshal(b, m, deterministic)
}
func (m *CreateOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOperationsResponse.Merge(m, src)
}
func (m *CreateOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_CreateOperationsResponse.Size(m)
}
func (m *CreateOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOperationsResponse proto.InternalMessageInfo

func (m *CreateOperationsResponse) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type UpdateOperationsRequest struct {
	Operations           []*Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateOperationsRequest) Reset()         { *m = UpdateOperationsRequest{} }
func (m *UpdateOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOperationsRequest) ProtoMessage()    {}
func (*UpdateOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{22}
}

func (m *UpdateOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOperationsRequest.Unmarshal(m, b)
}
func (m *UpdateOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOperationsRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOperationsRequest.Merge(m, src)
}
func (m *UpdateOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOperationsRequest.Size(m)
}
func (m *UpdateOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOperationsRequest proto.InternalMessageInfo

func (m *UpdateOperationsRequest) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type UpdateOperationsResponse struct {
	Operations           []*Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateOperationsResponse) Reset()         { *m = UpdateOperationsResponse{} }
func (m *UpdateOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOperationsResponse) ProtoMessage()    {}
func (*UpdateOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{23}
}

func (m *UpdateOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOperationsResponse.Unmarshal(m, b)
}
func (m *UpdateOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOperationsResponse.Marshal(b, m, deterministic)
}
func (m *UpdateOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOperationsResponse.Merge(m, src)
}
func (m *UpdateOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateOperationsResponse.Size(m)
}
func (m *UpdateOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOperationsResponse proto.InternalMessageInfo

func (m *UpdateOperationsResponse) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

type ListOperationsRequest struct {
	WorkflowId           int64           `protobuf:"varint,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Offset               int32           `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                int32           `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy               OperationSortBy `protobuf:"varint,4,opt,name=sort_by,json=sortBy,proto3,enum=com.mindtickle.baton.pb.workflowservice.OperationSortBy" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListOperationsRequest) Reset()         { *m = ListOperationsRequest{} }
func (m *ListOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListOperationsRequest) ProtoMessage()    {}
func (*ListOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{24}
}

func (m *ListOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOperationsRequest.Unmarshal(m, b)
}
func (m *ListOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOperationsRequest.Marshal(b, m, deterministic)
}
func (m *ListOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOperationsRequest.Merge(m, src)
}
func (m *ListOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListOperationsRequest.Size(m)
}
func (m *ListOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOperationsRequest proto.InternalMessageInfo

func (m *ListOperationsRequest) GetWorkflowId() int64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

func (m *ListOperationsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListOperationsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOperationsRequest) GetSortBy() OperationSortBy {
	if m != nil {
		return m.SortBy
	}
	return OperationSortBy_DEFAULT_SORT_BY
}

type ListOperationsResponse struct {
	Operations           []*Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	NextOffset           int32        `protobuf:"varint,2,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListOperationsResponse) Reset()         { *m = ListOperationsResponse{} }
func (m *ListOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListOperationsResponse) ProtoMessage()    {}
func (*ListOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{25}
}

func (m *ListOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOperationsResponse.Unmarshal(m, b)
}
func (m *ListOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOperationsResponse.Marshal(b, m, deterministic)
}
func (m *ListOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOperationsResponse.Merge(m, src)
}
func (m *ListOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListOperationsResponse.Size(m)
}
func (m *ListOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOperationsResponse proto.InternalMessageInfo

func (m *ListOperationsResponse) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *ListOperationsResponse) GetNextOffset() int32 {
	if m != nil {
		return m.NextOffset
	}
	return 0
}

type FetchOperationsRequest struct {
	OperationIds         []int64  `protobuf:"varint,1,rep,packed,name=operation_ids,json=operationIds,proto3" json:"operation_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchOperationsRequest) Reset()         { *m = FetchOperationsRequest{} }
func (m *FetchOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*FetchOperationsRequest) ProtoMessage()    {}
func (*FetchOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{26}
}

func (m *FetchOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchOperationsRequest.Unmarshal(m, b)
}
func (m *FetchOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchOperationsRequest.Marshal(b, m, deterministic)
}
func (m *FetchOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchOperationsRequest.Merge(m, src)
}
func (m *FetchOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_FetchOperationsRequest.Size(m)
}
func (m *FetchOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchOperationsRequest proto.InternalMessageInfo

func (m *FetchOperationsRequest) GetOperationIds() []int64 {
	if m != nil {
		return m.OperationIds
	}
	return nil
}

type FetchOperationsResponse struct {
	Operations           []*Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FetchOperationsResponse) Reset()         { *m = FetchOperationsResponse{} }
func (m *FetchOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*FetchOperationsResponse) ProtoMessage()    {}
func (*FetchOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{27}
}

func (m *FetchOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchOperationsResponse.Unmarshal(m, b)
}
func (m *FetchOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchOperationsResponse.Marshal(b, m, deterministic)
}
func (m *FetchOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchOperationsResponse.Merge(m, src)
}
func (m *FetchOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_FetchOperationsResponse.Size(m)
}
func (m *FetchOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchOperationsResponse proto.InternalMessageInfo

func (m *FetchOperationsResponse) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

// internal baton-event for operations related messages.
type OperationsEvent struct {
	WorkflowId           int64        `protobuf:"varint,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	BulkRequestType      string       `protobuf:"bytes,2,opt,name=bulk_request_type,json=bulkRequestType,proto3" json:"bulk_request_type,omitempty"`
	Operations           []*Operation `protobuf:"bytes,3,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *OperationsEvent) Reset()         { *m = OperationsEvent{} }
func (m *OperationsEvent) String() string { return proto.CompactTextString(m) }
func (*OperationsEvent) ProtoMessage()    {}
func (*OperationsEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_89fd1811669d6b94, []int{28}
}

func (m *OperationsEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationsEvent.Unmarshal(m, b)
}
func (m *OperationsEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationsEvent.Marshal(b, m, deterministic)
}
func (m *OperationsEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationsEvent.Merge(m, src)
}
func (m *OperationsEvent) XXX_Size() int {
	return xxx_messageInfo_OperationsEvent.Size(m)
}
func (m *OperationsEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationsEvent.DiscardUnknown(m)
}

var xxx_messageInfo_OperationsEvent proto.InternalMessageInfo

func (m *OperationsEvent) GetWorkflowId() int64 {
	if m != nil {
		return m.WorkflowId
	}
	return 0
}

func (m *OperationsEvent) GetBulkRequestType() string {
	if m != nil {
		return m.BulkRequestType
	}
	return ""
}

func (m *OperationsEvent) GetOperations() []*Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func init() {
	proto.RegisterEnum("com.mindtickle.baton.pb.workflowservice.OperationState", OperationState_name, OperationState_value)
	proto.RegisterEnum("com.mindtickle.baton.pb.workflowservice.WorkflowState", WorkflowState_name, WorkflowState_value)
	proto.RegisterEnum("com.mindtickle.baton.pb.workflowservice.QueryWorkflowFieldMask", QueryWorkflowFieldMask_name, QueryWorkflowFieldMask_value)
	proto.RegisterEnum("com.mindtickle.baton.pb.workflowservice.UpdateWorkflowFieldMask", UpdateWorkflowFieldMask_name, UpdateWorkflowFieldMask_value)
	proto.RegisterEnum("com.mindtickle.baton.pb.workflowservice.OperationSortBy", OperationSortBy_name, OperationSortBy_value)
	proto.RegisterType((*Workflow)(nil), "com.mindtickle.baton.pb.workflowservice.Workflow")
	proto.RegisterMapType((map[string]*SubContext)(nil), "com.mindtickle.baton.pb.workflowservice.Workflow.SubContextsEntry")
	proto.RegisterType((*RestartWorkflowRequest)(nil), "com.mindtickle.baton.pb.workflowservice.RestartWorkflowRequest")
	proto.RegisterType((*RestartWorkflowResponse)(nil), "com.mindtickle.baton.pb.workflowservice.RestartWorkflowResponse")
	proto.RegisterType((*SubContext)(nil), "com.mindtickle.baton.pb.workflowservice.SubContext")
	proto.RegisterType((*CreateSubContextRequest)(nil), "com.mindtickle.baton.pb.workflowservice.CreateSubContextRequest")
	proto.RegisterType((*CreateSubContextResponse)(nil), "com.mindtickle.baton.pb.workflowservice.CreateSubContextResponse")
	proto.RegisterType((*AttachSubContextRequest)(nil), "com.mindtickle.baton.pb.workflowservice.AttachSubContextRequest")
	proto.RegisterType((*AttachSubContextResponse)(nil), "com.mindtickle.baton.pb.workflowservice.AttachSubContextResponse")
	proto.RegisterType((*GetSubContextRequest)(nil), "com.mindtickle.baton.pb.workflowservice.GetSubContextRequest")
	proto.RegisterType((*GetSubContextResponse)(nil), "com.mindtickle.baton.pb.workflowservice.GetSubContextResponse")
	proto.RegisterType((*WorkflowIdentity)(nil), "com.mindtickle.baton.pb.workflowservice.WorkflowIdentity")
	proto.RegisterType((*CreateWorkflowRequest)(nil), "com.mindtickle.baton.pb.workflowservice.CreateWorkflowRequest")
	proto.RegisterType((*CreateWorkflowResponse)(nil), "com.mindtickle.baton.pb.workflowservice.CreateWorkflowResponse")
	proto.RegisterType((*UpdateWorkflowRequest)(nil), "com.mindtickle.baton.pb.workflowservice.UpdateWorkflowRequest")
	proto.RegisterType((*UpdateWorkflowResponse)(nil), "com.mindtickle.baton.pb.workflowservice.UpdateWorkflowResponse")
	proto.RegisterType((*FetchWorkflowRequest)(nil), "com.mindtickle.baton.pb.workflowservice.FetchWorkflowRequest")
	proto.RegisterType((*FetchWorkflowResponse)(nil), "com.mindtickle.baton.pb.workflowservice.FetchWorkflowResponse")
	proto.RegisterType((*FetchWorkflowsRequest)(nil), "com.mindtickle.baton.pb.workflowservice.FetchWorkflowsRequest")
	proto.RegisterType((*FetchWorkflowsResponse)(nil), "com.mindtickle.baton.pb.workflowservice.FetchWorkflowsResponse")
	proto.RegisterMapType((map[int64]*Workflow)(nil), "com.mindtickle.baton.pb.workflowservice.FetchWorkflowsResponse.WorkflowsEntry")
	proto.RegisterType((*Operation)(nil), "com.mindtickle.baton.pb.workflowservice.Operation")
	proto.RegisterType((*CreateOperationsRequest)(nil), "com.mindtickle.baton.pb.workflowservice.CreateOperationsRequest")
	proto.RegisterType((*CreateOperationsResponse)(nil), "com.mindtickle.baton.pb.workflowservice.CreateOperationsResponse")
	proto.RegisterType((*UpdateOperationsRequest)(nil), "com.mindtickle.baton.pb.workflowservice.UpdateOperationsRequest")
	proto.RegisterType((*UpdateOperationsResponse)(nil), "com.mindtickle.baton.pb.workflowservice.UpdateOperationsResponse")
	proto.RegisterType((*ListOperationsRequest)(nil), "com.mindtickle.baton.pb.workflowservice.ListOperationsRequest")
	proto.RegisterType((*ListOperationsResponse)(nil), "com.mindtickle.baton.pb.workflowservice.ListOperationsResponse")
	proto.RegisterType((*FetchOperationsRequest)(nil), "com.mindtickle.baton.pb.workflowservice.FetchOperationsRequest")
	proto.RegisterType((*FetchOperationsResponse)(nil), "com.mindtickle.baton.pb.workflowservice.FetchOperationsResponse")
	proto.RegisterType((*OperationsEvent)(nil), "com.mindtickle.baton.pb.workflowservice.OperationsEvent")
}

func init() { proto.RegisterFile("workflowService.proto", fileDescriptor_89fd1811669d6b94) }

var fileDescriptor_89fd1811669d6b94 = []byte{
	// 1836 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x4f, 0x73, 0xe3, 0x48,
	0x15, 0x5f, 0xd9, 0xb1, 0x13, 0x3f, 0xff, 0x89, 0xd2, 0x13, 0x27, 0xda, 0xf0, 0x2f, 0xeb, 0x61,
	0x99, 0x54, 0xaa, 0xf0, 0xb0, 0xd9, 0x02, 0x16, 0xa8, 0x99, 0x1d, 0x39, 0x56, 0x06, 0xd7, 0x38,
	0xf6, 0x4c, 0x5b, 0x26, 0x0c, 0x14, 0xa5, 0x92, 0xad, 0x4e, 0xa2, 0x8a, 0x6d, 0x09, 0xa9, 0x3d,
	0x83, 0xbf, 0x01, 0x17, 0xa8, 0x82, 0x5a, 0xe0, 0x40, 0x15, 0x37, 0xbe, 0x02, 0x37, 0x38, 0x71,
	0xe1, 0xc2, 0x95, 0x0f, 0xc2, 0x81, 0x2b, 0xd5, 0xfa, 0x2f, 0x59, 0xa9, 0xb2, 0x3c, 0xeb, 0xdd,
	0xd3, 0x44, 0xaf, 0x5f, 0xbf, 0xfe, 0xbd, 0xdf, 0x7b, 0xfd, 0xfc, 0x5e, 0x0f, 0xd4, 0xdf, 0x1a,
	0xd6, 0xdd, 0xf5, 0xc4, 0x78, 0x3b, 0x20, 0xd6, 0x1b, 0x7d, 0x4c, 0x9a, 0xa6, 0x65, 0x50, 0x03,
	0x3d, 0x1a, 0x1b, 0xd3, 0xe6, 0x54, 0x9f, 0x69, 0x54, 0x1f, 0xdf, 0x4d, 0x48, 0x73, 0xa4, 0x52,
	0x63, 0xd6, 0x34, 0x47, 0x4d, 0x5f, 0xdd, 0x76, 0xd5, 0x1b, 0xff, 0x29, 0xc2, 0xce, 0x95, 0x27,
	0x43, 0x08, 0x72, 0xba, 0x26, 0x70, 0xc7, 0xdc, 0x49, 0xbe, 0x95, 0xfb, 0x0e, 0x87, 0x73, 0xba,
	0x86, 0xbe, 0x0a, 0xa5, 0x99, 0x3a, 0x25, 0xb6, 0xa9, 0x8e, 0x89, 0x90, 0x3b, 0xe6, 0x4e, 0x4a,
	0x38, 0x14, 0xa0, 0x3a, 0x14, 0x0d, 0xeb, 0x46, 0xd1, 0x35, 0x21, 0xef, 0x2c, 0x15, 0x0c, 0xeb,
	0xa6, 0xa3, 0xa1, 0x43, 0xd8, 0x56, 0xe7, 0xf4, 0x96, 0xc9, 0xb7, 0x1c, 0x79, 0x91, 0x7d, 0x76,
	0x34, 0x74, 0x0a, 0x7b, 0xa3, 0xf9, 0xe4, 0x4e, 0xb1, 0xc8, 0x2f, 0xe7, 0xc4, 0xa6, 0x0a, 0x5d,
	0x98, 0x44, 0x28, 0x38, 0x2a, 0xbb, 0x6c, 0x01, 0xbb, 0x72, 0x79, 0x61, 0x12, 0xf4, 0x01, 0x54,
	0xa2, 0xba, 0x42, 0xd1, 0x51, 0x2b, 0x47, 0xd4, 0xd0, 0x2f, 0xa0, 0xe6, 0x3b, 0xa4, 0xd8, 0x54,
	0xa5, 0x44, 0xd8, 0x3e, 0xe6, 0x4e, 0x6a, 0x67, 0xdf, 0x6b, 0xae, 0xe8, 0x7f, 0xd3, 0xf7, 0x7d,
	0xc0, 0x76, 0xe3, 0xea, 0xdb, 0xe8, 0x27, 0xf3, 0xdd, 0x9e, 0x8f, 0xa6, 0x3a, 0xa5, 0x44, 0x13,
	0x76, 0x8e, 0xb9, 0x93, 0x2a, 0x0e, 0x05, 0x48, 0x80, 0x6d, 0x7b, 0x3e, 0x1e, 0x13, 0xdb, 0x16,
	0x4a, 0xce, 0x9a, 0xff, 0x89, 0x0e, 0xa0, 0x78, 0xad, 0xea, 0x13, 0xa2, 0x09, 0xe0, 0x2c, 0x78,
	0x5f, 0xe8, 0xbb, 0xb0, 0x1f, 0x6c, 0x57, 0x0c, 0x93, 0x58, 0x2a, 0xd5, 0x8d, 0x99, 0x2d, 0x94,
	0x8f, 0xf3, 0x1e, 0xe3, 0x0f, 0x82, 0xf5, 0x7e, 0xb0, 0x8c, 0x1e, 0xc3, 0x9e, 0x6b, 0x20, 0xba,
	0xa7, 0x12, 0xec, 0xe1, 0xdd, 0xc5, 0xc8, 0x86, 0x8f, 0x00, 0x79, 0x50, 0xa2, 0x3b, 0xaa, 0xc1,
	0x8e, 0x3d, 0x6f, 0x35, 0xb2, 0xe5, 0x03, 0xa8, 0x8c, 0x2d, 0xa2, 0x32, 0x60, 0x54, 0x9f, 0x12,
	0xa1, 0xe6, 0x92, 0xed, 0xc9, 0x64, 0x7d, 0x4a, 0x58, 0xec, 0x26, 0xaa, 0x4d, 0x95, 0xb9, 0xa9,
	0x85, 0x7a, 0xbb, 0x6e, 0xec, 0xd8, 0xc2, 0xd0, 0x95, 0x3b, 0xba, 0x1f, 0x42, 0x6d, 0x6c, 0x4c,
	0xcd, 0x09, 0x09, 0x14, 0x79, 0x47, 0xb1, 0x1a, 0x48, 0x1d, 0x35, 0x02, 0x15, 0x7b, 0x3e, 0x52,
	0xc6, 0xc6, 0x8c, 0x92, 0x5f, 0x51, 0x5b, 0xd8, 0x3b, 0xce, 0x9f, 0x94, 0xcf, 0x5a, 0x99, 0xa3,
	0xd7, 0x1c, 0xcc, 0x47, 0xe7, 0x9e, 0x11, 0x69, 0x46, 0xad, 0x05, 0x2e, 0xdb, 0xa1, 0xe4, 0xc8,
	0x06, 0x3e, 0xa9, 0x80, 0x78, 0xc8, 0xdf, 0x91, 0x85, 0x93, 0xec, 0x25, 0xcc, 0xfe, 0x44, 0x1d,
	0x28, 0xbc, 0x51, 0x27, 0x73, 0x37, 0xcb, 0xcb, 0x67, 0x1f, 0xaf, 0x8c, 0x22, 0xb4, 0x8d, 0x5d,
	0x0b, 0x3f, 0xcc, 0x7d, 0xc2, 0x35, 0x9e, 0xc0, 0x01, 0x26, 0x36, 0x55, 0x2d, 0xea, 0xa3, 0xf4,
	0xb3, 0xf6, 0x21, 0x94, 0x83, 0xac, 0x8d, 0xdd, 0x37, 0xf0, 0xc5, 0x1d, 0xad, 0x71, 0x0b, 0x87,
	0x4b, 0xdb, 0x6d, 0xd3, 0x98, 0xd9, 0x04, 0x5d, 0xc2, 0x8e, 0xaf, 0xe8, 0x6c, 0x2e, 0x9f, 0x7d,
	0x94, 0x99, 0x31, 0x1c, 0x98, 0x68, 0xdc, 0x00, 0x84, 0x1e, 0x30, 0x5e, 0x54, 0xd3, 0xf4, 0x79,
	0x51, 0x4d, 0x13, 0x7d, 0x0b, 0x76, 0x23, 0x41, 0x52, 0x18, 0x6b, 0x6e, 0x1d, 0xa8, 0x86, 0x1c,
	0xbf, 0x20, 0x0b, 0xf4, 0x0d, 0x28, 0x47, 0xf4, 0xbc, 0x82, 0x00, 0xa1, 0x4e, 0xc3, 0x80, 0xc3,
	0x73, 0x27, 0x9f, 0x22, 0x84, 0x79, 0x94, 0xc8, 0xf1, 0xbd, 0xdc, 0xfa, 0x11, 0x88, 0x1e, 0xf8,
	0x07, 0x0e, 0x84, 0xe5, 0x13, 0x3d, 0x16, 0x37, 0x72, 0x64, 0x32, 0xb6, 0xb9, 0xd4, 0xd8, 0x7e,
	0xc6, 0xc1, 0xa1, 0x48, 0xa9, 0x3a, 0xbe, 0xfd, 0x82, 0x98, 0x58, 0x0d, 0xd6, 0x11, 0x08, 0xcb,
	0xa8, 0x5c, 0xb6, 0x1a, 0x63, 0xd8, 0x7f, 0x4e, 0xe8, 0x32, 0xdc, 0x94, 0xe4, 0xe0, 0xd2, 0x92,
	0x63, 0x25, 0x00, 0xbf, 0xe7, 0xa0, 0x9e, 0x38, 0xe5, 0xcb, 0x0f, 0xd6, 0x13, 0xe0, 0xaf, 0x82,
	0x2f, 0x32, 0xa3, 0x3a, 0x5d, 0xa4, 0xfe, 0x50, 0xd6, 0xa1, 0x68, 0x53, 0xcb, 0xb7, 0x53, 0xc2,
	0x05, 0x9b, 0x5a, 0x1d, 0xad, 0x71, 0x0d, 0x75, 0x37, 0x05, 0x93, 0x55, 0xe0, 0x73, 0xbf, 0xc5,
	0x07, 0xc9, 0x73, 0x36, 0x53, 0x2e, 0xfe, 0xc1, 0x41, 0xdd, 0x2d, 0xf5, 0x9b, 0xf5, 0x08, 0xfd,
	0x04, 0x0a, 0x53, 0xd5, 0xbe, 0xb3, 0x85, 0xdc, 0x71, 0xfe, 0xa4, 0x76, 0xf6, 0x6c, 0x65, 0x5b,
	0x71, 0x74, 0x17, 0x3a, 0x99, 0x68, 0x97, 0xaa, 0x7d, 0x87, 0x5d, 0x73, 0x8c, 0xa9, 0x24, 0xfe,
	0xcd, 0x30, 0xf5, 0x4f, 0x0e, 0xf6, 0x2f, 0x08, 0x1d, 0xdf, 0x26, 0x89, 0x1a, 0xc2, 0x8e, 0xee,
	0xa5, 0x92, 0x77, 0xce, 0x0f, 0x32, 0x9f, 0xe3, 0xe7, 0x22, 0x0e, 0x4c, 0xa1, 0x61, 0x9c, 0xb0,
	0x4f, 0x57, 0xb6, 0xf9, 0x6a, 0x4e, 0xac, 0xc5, 0xbd, 0x7c, 0x5d, 0x43, 0x3d, 0xe1, 0xc5, 0x66,
	0xe8, 0xfa, 0x17, 0x97, 0x38, 0xc8, 0xf6, 0xf9, 0x7a, 0x0d, 0xe0, 0x39, 0xa9, 0x13, 0x5b, 0xe0,
	0x9c, 0x26, 0xe1, 0x1d, 0x18, 0x8b, 0x18, 0xdb, 0x14, 0x67, 0xff, 0xe3, 0xe0, 0x20, 0xe9, 0x8b,
	0xc7, 0xda, 0x04, 0x4a, 0x81, 0x2d, 0xcf, 0x97, 0xde, 0xca, 0xa7, 0xa6, 0xdb, 0x0c, 0x5c, 0xf4,
	0x9a, 0x9f, 0xf0, 0x80, 0x23, 0x03, 0x6a, 0xf1, 0xc5, 0x68, 0xe3, 0x93, 0x77, 0x1b, 0x9f, 0xe7,
	0xf1, 0xc6, 0x67, 0x8d, 0x20, 0x46, 0xda, 0x9e, 0xff, 0xe6, 0xa1, 0x14, 0xf4, 0x95, 0xf7, 0x15,
	0x4a, 0x6f, 0x66, 0xc8, 0x45, 0x67, 0x86, 0x87, 0x50, 0xb5, 0x89, 0xa5, 0xab, 0x13, 0x65, 0x36,
	0x9f, 0x8e, 0x88, 0xe5, 0x34, 0x10, 0x05, 0x5c, 0x71, 0x85, 0x3d, 0x47, 0x96, 0xac, 0xd8, 0x5b,
	0x69, 0x15, 0x9b, 0x4d, 0x1f, 0x86, 0xa9, 0x68, 0x2a, 0x55, 0xbd, 0xd1, 0xa2, 0x68, 0x98, 0x6d,
	0x95, 0xaa, 0xe8, 0x2b, 0x50, 0x32, 0x4c, 0xc5, 0x22, 0xf6, 0x7c, 0xe2, 0x8f, 0x13, 0x3b, 0x86,
	0x89, 0x9d, 0x6f, 0x76, 0xbe, 0x45, 0x6c, 0x63, 0x6e, 0x8d, 0x89, 0xc2, 0x06, 0x1c, 0x67, 0x94,
	0x28, 0xe1, 0x8a, 0x2f, 0xec, 0xa9, 0x53, 0xe2, 0x99, 0x76, 0x96, 0x77, 0x7c, 0xd3, 0xce, 0xc2,
	0x25, 0x14, 0xdc, 0x01, 0xa4, 0xe4, 0x0c, 0x20, 0xdf, 0x5f, 0x99, 0xc3, 0x80, 0x2b, 0x77, 0x02,
	0x71, 0xad, 0xa0, 0x13, 0xe0, 0x35, 0x62, 0x92, 0x19, 0x4b, 0x54, 0xc5, 0x30, 0x15, 0x5d, 0xb3,
	0x05, 0x60, 0xfd, 0x3b, 0xae, 0x05, 0xf2, 0xbe, 0xd9, 0xd1, 0x6c, 0xf4, 0x6d, 0x78, 0x10, 0xd1,
	0x9c, 0xf9, 0xca, 0xce, 0x48, 0x81, 0x43, 0x23, 0xfd, 0x99, 0xab, 0xfe, 0x61, 0xa2, 0xcf, 0xaf,
	0x04, 0x0c, 0xc6, 0x7a, 0xfd, 0x66, 0x5a, 0xaf, 0x5f, 0x0d, 0x74, 0x93, 0xfd, 0x7e, 0x63, 0xea,
	0xb7, 0x76, 0xe1, 0x48, 0xe1, 0x5f, 0x5e, 0x0c, 0x10, 0x19, 0x42, 0xdc, 0x84, 0x3f, 0xcb, 0x4e,
	0x0f, 0x8e, 0x58, 0x69, 0xcc, 0xfc, 0xbe, 0x2e, 0x7a, 0x9c, 0x77, 0xbf, 0x36, 0x71, 0xde, 0x14,
	0x0e, 0x5d, 0x6f, 0xbf, 0x30, 0xf7, 0x96, 0x8f, 0xdb, 0xa0, 0x7b, 0x7f, 0xe7, 0xa0, 0xde, 0xd5,
	0x6d, 0xba, 0xec, 0xdd, 0x2a, 0xa3, 0x0a, 0x1b, 0x77, 0x8d, 0xeb, 0x6b, 0x9b, 0x50, 0xe7, 0x42,
	0x17, 0xb0, 0xf7, 0x85, 0xf6, 0xa1, 0x30, 0xd1, 0xa7, 0x3a, 0xf5, 0x6e, 0xb2, 0xfb, 0x81, 0x5e,
	0xc1, 0xb6, 0x6d, 0x58, 0x54, 0x19, 0x2d, 0x9c, 0xeb, 0x5b, 0x3b, 0xfb, 0x64, 0x8d, 0xbb, 0x62,
	0x58, 0xb4, 0xb5, 0xc0, 0x45, 0xdb, 0xf9, 0xb7, 0xf1, 0x1b, 0x0e, 0x0e, 0x92, 0xf8, 0x37, 0x47,
	0x17, 0x1b, 0x74, 0x66, 0xac, 0xd9, 0x8d, 0x39, 0x0d, 0x4c, 0xd4, 0x77, 0x24, 0x0d, 0xd1, 0x2b,
	0xfe, 0xcb, 0x7c, 0x3e, 0x82, 0x6a, 0x60, 0xc8, 0xb9, 0xa7, 0x5c, 0x30, 0x94, 0x57, 0x82, 0x85,
	0x8e, 0xe6, 0x64, 0xdc, 0x92, 0x89, 0x0d, 0x66, 0xc0, 0xdf, 0x38, 0xd8, 0x0d, 0x8f, 0x92, 0xde,
	0x90, 0xd9, 0x8a, 0xb1, 0x4f, 0x7d, 0xd0, 0xc9, 0xa5, 0x3f, 0xe8, 0xc4, 0x81, 0xe7, 0x3f, 0x0f,
	0xe0, 0xa7, 0x7f, 0xe5, 0xa0, 0x16, 0x2f, 0xa1, 0xe8, 0x6b, 0xf0, 0xfe, 0xb0, 0xd7, 0x96, 0x2e,
	0x3a, 0x3d, 0xa9, 0xad, 0xf4, 0x5f, 0x4a, 0x58, 0x94, 0x3b, 0xfd, 0x9e, 0x32, 0x90, 0x45, 0x59,
	0xe2, 0xdf, 0x43, 0x75, 0xd8, 0x0b, 0x85, 0xe7, 0x58, 0x12, 0x65, 0xa9, 0xcd, 0x73, 0xe8, 0x10,
	0x1e, 0x44, 0x74, 0xcf, 0x7f, 0x2c, 0xb5, 0x87, 0x5d, 0xa9, 0xcd, 0xe7, 0xd0, 0x3e, 0xf0, 0xe1,
	0xc2, 0x85, 0xd8, 0x61, 0xd2, 0x7c, 0xdc, 0xca, 0x60, 0x78, 0x7e, 0x2e, 0x0d, 0x06, 0xfc, 0x56,
	0xdc, 0xca, 0x4b, 0xdc, 0x67, 0x62, 0xa9, 0xcd, 0x17, 0x4e, 0xff, 0xcd, 0x41, 0xf5, 0x2a, 0xf1,
	0xb8, 0x24, 0x84, 0x30, 0xaf, 0xfa, 0xf8, 0xc5, 0x45, 0xb7, 0x7f, 0x15, 0xa0, 0xdc, 0x07, 0x3e,
	0x90, 0xc5, 0x40, 0x06, 0x52, 0xcf, 0x7a, 0xa7, 0xf7, 0x9c, 0xcf, 0xa1, 0x07, 0xb0, 0x1b, 0x2c,
	0x04, 0x18, 0xa3, 0x36, 0x42, 0x88, 0x51, 0xa9, 0xd8, 0xea, 0x63, 0x66, 0xb9, 0x80, 0x0e, 0x00,
	0x05, 0x52, 0x2c, 0x0d, 0x64, 0xd1, 0x91, 0x17, 0x63, 0x27, 0xb6, 0x25, 0xb1, 0xdd, 0x95, 0x64,
	0x59, 0xc2, 0xfc, 0xf6, 0xe9, 0x9f, 0x39, 0x38, 0x48, 0xef, 0x81, 0xd0, 0x23, 0x78, 0x98, 0xe2,
	0xd9, 0xab, 0xa1, 0x84, 0x5f, 0x2b, 0x17, 0x1d, 0xa9, 0xdb, 0x56, 0x2e, 0xc5, 0xc1, 0x0b, 0x37,
	0x14, 0xad, 0x61, 0xf7, 0x85, 0x82, 0xa5, 0x57, 0x43, 0x69, 0x20, 0x2b, 0x6d, 0x51, 0x16, 0x79,
	0x0e, 0xbd, 0x0f, 0xf5, 0x98, 0xf8, 0x25, 0xee, 0x3f, 0xc7, 0x0c, 0x7c, 0x2e, 0x4e, 0x7b, 0x5b,
	0x92, 0xc5, 0x4e, 0x77, 0xc0, 0xe7, 0xd1, 0x2e, 0x94, 0x07, 0xc3, 0x96, 0x72, 0xde, 0xef, 0xc9,
	0xd2, 0x4f, 0x65, 0x7e, 0xeb, 0xf4, 0xe7, 0x7e, 0xc1, 0x5e, 0x46, 0x77, 0x02, 0xdf, 0x4c, 0x41,
	0x37, 0x7c, 0xd9, 0x16, 0x65, 0x29, 0x0e, 0xef, 0x00, 0x50, 0x0c, 0x87, 0x1b, 0x1b, 0xee, 0x94,
	0x46, 0xee, 0x8a, 0x5b, 0x89, 0x18, 0xff, 0x6d, 0xe9, 0x42, 0x1c, 0x76, 0x65, 0x65, 0xd0, 0xc7,
	0xb2, 0xd2, 0x7a, 0xcd, 0xbf, 0x87, 0x78, 0xa8, 0x84, 0x60, 0x3b, 0x2c, 0x7e, 0x7b, 0x50, 0x1d,
	0x48, 0xb8, 0x23, 0x76, 0x95, 0xde, 0xf0, 0xb2, 0x25, 0x61, 0x3e, 0xc7, 0x94, 0xbc, 0xf8, 0x2a,
	0x72, 0xe7, 0x52, 0x72, 0x53, 0xab, 0x2b, 0x0e, 0x64, 0x0f, 0x92, 0x27, 0xde, 0x3a, 0xfb, 0x4b,
	0x0d, 0x76, 0xaf, 0xe2, 0x8f, 0xbd, 0xe8, 0x77, 0x1c, 0xd4, 0xe2, 0x53, 0x1f, 0x7a, 0xba, 0xf2,
	0x85, 0x4a, 0x1d, 0x4b, 0x8f, 0x3e, 0x5d, 0x7b, 0xbf, 0x57, 0x9e, 0x18, 0xa6, 0x38, 0xf7, 0x19,
	0x30, 0xa5, 0x0e, 0x96, 0x19, 0x30, 0xdd, 0x33, 0xd8, 0xfd, 0x96, 0x83, 0x6a, 0xac, 0x75, 0x46,
	0x4f, 0xd6, 0x6b, 0xb9, 0x7d, 0x44, 0x4f, 0xd7, 0xdd, 0xee, 0x01, 0xfa, 0x8c, 0x83, 0xdd, 0xc4,
	0xf3, 0x1e, 0x5a, 0xdd, 0xcb, 0xf4, 0x77, 0xc5, 0xa3, 0x67, 0xeb, 0x1b, 0xf0, 0x60, 0xfd, 0x91,
	0x83, 0x5a, 0x7c, 0xc4, 0x40, 0x4f, 0xd7, 0x9e, 0x4d, 0xb2, 0xc6, 0x2e, 0x7d, 0xb6, 0x69, 0xe4,
	0x7f, 0x9d, 0xe3, 0xd0, 0x9f, 0x38, 0xe0, 0x93, 0x1d, 0x1f, 0x7a, 0x96, 0x31, 0x55, 0x97, 0x7e,
	0x8e, 0x8f, 0xc4, 0x77, 0xb0, 0xe0, 0x51, 0xc6, 0x90, 0x25, 0x9b, 0x35, 0x94, 0xf5, 0xad, 0xe2,
	0x5d, 0x90, 0xdd, 0xdb, 0x29, 0xb2, 0x1c, 0x4b, 0xf4, 0x10, 0x28, 0x63, 0x34, 0x96, 0x71, 0x3d,
	0x5b, 0xdf, 0x40, 0xa4, 0x3e, 0xc4, 0x9b, 0xb5, 0x0c, 0x39, 0x96, 0xda, 0xa5, 0x66, 0xc8, 0xb1,
	0x7b, 0xba, 0xc4, 0x30, 0xbd, 0x22, 0x2f, 0xe1, 0x59, 0xd3, 0x6b, 0xe9, 0x71, 0x34, 0x73, 0x7a,
	0xa5, 0x3c, 0x7c, 0x32, 0x64, 0xc9, 0x47, 0xd9, 0x0c, 0xc8, 0xee, 0x79, 0x65, 0xce, 0x80, 0xec,
	0xbe, 0x17, 0x61, 0xa7, 0xa6, 0xc6, 0x1e, 0x6b, 0x33, 0xd4, 0xd4, 0xb4, 0xa7, 0xe4, 0x0c, 0x35,
	0x35, 0xf5, 0x8d, 0xb8, 0x75, 0xfc, 0xb3, 0xaf, 0xdf, 0x90, 0x19, 0x8b, 0x2d, 0xd1, 0x1e, 0xdf,
	0x18, 0x8f, 0xfd, 0x5d, 0x3f, 0xf2, 0xff, 0x18, 0x15, 0x9d, 0xff, 0x1c, 0xfd, 0xf8, 0xff, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x95, 0xbb, 0x22, 0xff, 0x35, 0x1d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkflowServiceClient is the client API for WorkflowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkflowServiceClient interface {
	// creates and trigger a workflow in baton.
	// creates a workflowContext for tracking workflow inside the system.
	CreateWorkflow(ctx context.Context, in *CreateWorkflowRequest, opts ...grpc.CallOption) (*CreateWorkflowResponse, error)
	UpdateWorkflow(ctx context.Context, in *UpdateWorkflowRequest, opts ...grpc.CallOption) (*UpdateWorkflowResponse, error)
	FetchWorkflow(ctx context.Context, in *FetchWorkflowRequest, opts ...grpc.CallOption) (*FetchWorkflowResponse, error)
	// Clean the workflow state, and start it from scratch again.
	// To be used with caution.
	// Completed operations might get repeated depending upon the logic.
	RestartWorkflow(ctx context.Context, in *RestartWorkflowRequest, opts ...grpc.CallOption) (*RestartWorkflowResponse, error)
	FetchWorkflows(ctx context.Context, in *FetchWorkflowsRequest, opts ...grpc.CallOption) (*FetchWorkflowsResponse, error)
	CreateOperations(ctx context.Context, in *CreateOperationsRequest, opts ...grpc.CallOption) (*CreateOperationsResponse, error)
	UpdateOperations(ctx context.Context, in *UpdateOperationsRequest, opts ...grpc.CallOption) (*UpdateOperationsResponse, error)
	FetchOperations(ctx context.Context, in *FetchOperationsRequest, opts ...grpc.CallOption) (*FetchOperationsResponse, error)
	ListOperations(ctx context.Context, in *ListOperationsRequest, opts ...grpc.CallOption) (*ListOperationsResponse, error)
	//CreateSubContext:
	// 1. Creates an empty workflowContext with SubContext requested.
	// 2. Returns WorkflowId, and Immutable SubContext in it's response.
	CreateSubContext(ctx context.Context, in *CreateSubContextRequest, opts ...grpc.CallOption) (*CreateSubContextResponse, error)
	//AttachSubContext:
	//1. Attaches given Immutable SubContext to a workflowContext, given in the request.
	AttachSubContext(ctx context.Context, in *AttachSubContextRequest, opts ...grpc.CallOption) (*AttachSubContextResponse, error)
	//GetSubContext:
	//Given a workflowContext id, SubContext key, returns the Immutable SubContext.
	GetSubContext(ctx context.Context, in *GetSubContextRequest, opts ...grpc.CallOption) (*GetSubContextResponse, error)
}

type workflowServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkflowServiceClient(cc *grpc.ClientConn) WorkflowServiceClient {
	return &workflowServiceClient{cc}
}

func (c *workflowServiceClient) CreateWorkflow(ctx context.Context, in *CreateWorkflowRequest, opts ...grpc.CallOption) (*CreateWorkflowResponse, error) {
	out := new(CreateWorkflowResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/CreateWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) UpdateWorkflow(ctx context.Context, in *UpdateWorkflowRequest, opts ...grpc.CallOption) (*UpdateWorkflowResponse, error) {
	out := new(UpdateWorkflowResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/UpdateWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) FetchWorkflow(ctx context.Context, in *FetchWorkflowRequest, opts ...grpc.CallOption) (*FetchWorkflowResponse, error) {
	out := new(FetchWorkflowResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/FetchWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) RestartWorkflow(ctx context.Context, in *RestartWorkflowRequest, opts ...grpc.CallOption) (*RestartWorkflowResponse, error) {
	out := new(RestartWorkflowResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/RestartWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Deprecated: Do not use.
func (c *workflowServiceClient) FetchWorkflows(ctx context.Context, in *FetchWorkflowsRequest, opts ...grpc.CallOption) (*FetchWorkflowsResponse, error) {
	out := new(FetchWorkflowsResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/FetchWorkflows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) CreateOperations(ctx context.Context, in *CreateOperationsRequest, opts ...grpc.CallOption) (*CreateOperationsResponse, error) {
	out := new(CreateOperationsResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/CreateOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) UpdateOperations(ctx context.Context, in *UpdateOperationsRequest, opts ...grpc.CallOption) (*UpdateOperationsResponse, error) {
	out := new(UpdateOperationsResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/UpdateOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) FetchOperations(ctx context.Context, in *FetchOperationsRequest, opts ...grpc.CallOption) (*FetchOperationsResponse, error) {
	out := new(FetchOperationsResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/FetchOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ListOperations(ctx context.Context, in *ListOperationsRequest, opts ...grpc.CallOption) (*ListOperationsResponse, error) {
	out := new(ListOperationsResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/ListOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) CreateSubContext(ctx context.Context, in *CreateSubContextRequest, opts ...grpc.CallOption) (*CreateSubContextResponse, error) {
	out := new(CreateSubContextResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/CreateSubContext", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) AttachSubContext(ctx context.Context, in *AttachSubContextRequest, opts ...grpc.CallOption) (*AttachSubContextResponse, error) {
	out := new(AttachSubContextResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/AttachSubContext", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetSubContext(ctx context.Context, in *GetSubContextRequest, opts ...grpc.CallOption) (*GetSubContextResponse, error) {
	out := new(GetSubContextResponse)
	err := c.cc.Invoke(ctx, "/com.mindtickle.baton.pb.workflowservice.WorkflowService/GetSubContext", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkflowServiceServer is the server API for WorkflowService service.
type WorkflowServiceServer interface {
	// creates and trigger a workflow in baton.
	// creates a workflowContext for tracking workflow inside the system.
	CreateWorkflow(context.Context, *CreateWorkflowRequest) (*CreateWorkflowResponse, error)
	UpdateWorkflow(context.Context, *UpdateWorkflowRequest) (*UpdateWorkflowResponse, error)
	FetchWorkflow(context.Context, *FetchWorkflowRequest) (*FetchWorkflowResponse, error)
	// Clean the workflow state, and start it from scratch again.
	// To be used with caution.
	// Completed operations might get repeated depending upon the logic.
	RestartWorkflow(context.Context, *RestartWorkflowRequest) (*RestartWorkflowResponse, error)
	FetchWorkflows(context.Context, *FetchWorkflowsRequest) (*FetchWorkflowsResponse, error)
	CreateOperations(context.Context, *CreateOperationsRequest) (*CreateOperationsResponse, error)
	UpdateOperations(context.Context, *UpdateOperationsRequest) (*UpdateOperationsResponse, error)
	FetchOperations(context.Context, *FetchOperationsRequest) (*FetchOperationsResponse, error)
	ListOperations(context.Context, *ListOperationsRequest) (*ListOperationsResponse, error)
	//CreateSubContext:
	// 1. Creates an empty workflowContext with SubContext requested.
	// 2. Returns WorkflowId, and Immutable SubContext in it's response.
	CreateSubContext(context.Context, *CreateSubContextRequest) (*CreateSubContextResponse, error)
	//AttachSubContext:
	//1. Attaches given Immutable SubContext to a workflowContext, given in the request.
	AttachSubContext(context.Context, *AttachSubContextRequest) (*AttachSubContextResponse, error)
	//GetSubContext:
	//Given a workflowContext id, SubContext key, returns the Immutable SubContext.
	GetSubContext(context.Context, *GetSubContextRequest) (*GetSubContextResponse, error)
}

func RegisterWorkflowServiceServer(s *grpc.Server, srv WorkflowServiceServer) {
	s.RegisterService(&_WorkflowService_serviceDesc, srv)
}

func _WorkflowService_CreateWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/CreateWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateWorkflow(ctx, req.(*CreateWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_UpdateWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).UpdateWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/UpdateWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).UpdateWorkflow(ctx, req.(*UpdateWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_FetchWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).FetchWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/FetchWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).FetchWorkflow(ctx, req.(*FetchWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_RestartWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestartWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).RestartWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/RestartWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).RestartWorkflow(ctx, req.(*RestartWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_FetchWorkflows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchWorkflowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).FetchWorkflows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/FetchWorkflows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).FetchWorkflows(ctx, req.(*FetchWorkflowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_CreateOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/CreateOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateOperations(ctx, req.(*CreateOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_UpdateOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).UpdateOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/UpdateOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).UpdateOperations(ctx, req.(*UpdateOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_FetchOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).FetchOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/FetchOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).FetchOperations(ctx, req.(*FetchOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ListOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ListOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/ListOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ListOperations(ctx, req.(*ListOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_CreateSubContext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubContextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateSubContext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/CreateSubContext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateSubContext(ctx, req.(*CreateSubContextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_AttachSubContext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachSubContextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).AttachSubContext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/AttachSubContext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).AttachSubContext(ctx, req.(*AttachSubContextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetSubContext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubContextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetSubContext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mindtickle.baton.pb.workflowservice.WorkflowService/GetSubContext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetSubContext(ctx, req.(*GetSubContextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkflowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.mindtickle.baton.pb.workflowservice.WorkflowService",
	HandlerType: (*WorkflowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkflow",
			Handler:    _WorkflowService_CreateWorkflow_Handler,
		},
		{
			MethodName: "UpdateWorkflow",
			Handler:    _WorkflowService_UpdateWorkflow_Handler,
		},
		{
			MethodName: "FetchWorkflow",
			Handler:    _WorkflowService_FetchWorkflow_Handler,
		},
		{
			MethodName: "RestartWorkflow",
			Handler:    _WorkflowService_RestartWorkflow_Handler,
		},
		{
			MethodName: "FetchWorkflows",
			Handler:    _WorkflowService_FetchWorkflows_Handler,
		},
		{
			MethodName: "CreateOperations",
			Handler:    _WorkflowService_CreateOperations_Handler,
		},
		{
			MethodName: "UpdateOperations",
			Handler:    _WorkflowService_UpdateOperations_Handler,
		},
		{
			MethodName: "FetchOperations",
			Handler:    _WorkflowService_FetchOperations_Handler,
		},
		{
			MethodName: "ListOperations",
			Handler:    _WorkflowService_ListOperations_Handler,
		},
		{
			MethodName: "CreateSubContext",
			Handler:    _WorkflowService_CreateSubContext_Handler,
		},
		{
			MethodName: "AttachSubContext",
			Handler:    _WorkflowService_AttachSubContext_Handler,
		},
		{
			MethodName: "GetSubContext",
			Handler:    _WorkflowService_GetSubContext_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workflowService.proto",
}
